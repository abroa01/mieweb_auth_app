{"version":3,"sources":["meteor://ðŸ’»app/packages/reactive-dict/migration.js","meteor://ðŸ’»app/packages/reactive-dict/reactive-dict.js"],"names":["module","export","ReactiveDict","link","v","hasOwn","Object","prototype","hasOwnProperty","_migratedDictData","_dictsToMigrate","_loadMigratedDict","dictName","call","data","_registerDictForMigrate","dict","Error","Meteor","isClient","Package","reload","migrationData","Reload","_migrationData","dicts","_onMigrate","dictsToMigrate","dataToMigrate","meteorBabelHelpers","sanitizeForInObject","_getMigrationData","_typeof","default","stringify","value","undefined","EJSON","parse","serialized","changed","dictData","keys","migratedData","_setObject","name","allDeps","Tracker","Dependency","keyDeps","keyValueDeps","_proto","set","keyOrObject","key","keyExisted","oldSerializedValue","isNewValue","setDefault","_setDefaultObject","get","_ensureKey","depend","equals","_this","ObjectID","mongo","Mongo","Date","serializedValue","active","isNew","onInvalidate","hasDependents","oldValue","all","_this2","ret","forEach","clear","_this3","oldKeys","delete","didRemove","destroy","object","_this4","_this5"],"mappings":"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","file":"/packages/reactive-dict.js","sourcesContent":["import { ReactiveDict } from './reactive-dict';\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nReactiveDict._migratedDictData = {}; // name -> data\nReactiveDict._dictsToMigrate = {}; // name -> ReactiveDict\n\nReactiveDict._loadMigratedDict = function (dictName) {\n  if (hasOwn.call(ReactiveDict._migratedDictData, dictName)) {\n    const data = ReactiveDict._migratedDictData[dictName];\n    delete ReactiveDict._migratedDictData[dictName];\n    return data;\n  }\n\n  return null;\n};\n\nReactiveDict._registerDictForMigrate = function (dictName, dict) {\n  if (hasOwn.call(ReactiveDict._dictsToMigrate, dictName))\n    throw new Error(\"Duplicate ReactiveDict name: \" + dictName);\n\n  ReactiveDict._dictsToMigrate[dictName] = dict;\n};\n\nif (Meteor.isClient && Package.reload) {\n  // Put old migrated data into ReactiveDict._migratedDictData,\n  // where it can be accessed by ReactiveDict._loadMigratedDict.\n  var migrationData = Package.reload.Reload._migrationData('reactive-dict');\n  if (migrationData && migrationData.dicts)\n    ReactiveDict._migratedDictData = migrationData.dicts;\n\n  // On migration, assemble the data from all the dicts that have been\n  // registered.\n  Package.reload.Reload._onMigrate('reactive-dict', function () {\n    var dictsToMigrate = ReactiveDict._dictsToMigrate;\n    var dataToMigrate = {};\n\n    for (var dictName in dictsToMigrate)\n      dataToMigrate[dictName] = dictsToMigrate[dictName]._getMigrationData();\n\n    return [true, {dicts: dataToMigrate}];\n  });\n}\n\nexport { ReactiveDict };\n","const hasOwn = Object.prototype.hasOwnProperty;\n\n// XXX come up with a serialization method which canonicalizes object key\n// order, which would allow us to use objects as values for equals.\nfunction stringify(value) {\n  if (value === undefined) {\n    return 'undefined';\n  }\n  return EJSON.stringify(value);\n}\n\nfunction parse(serialized) {\n  if (serialized === undefined || serialized === 'undefined') {\n    return undefined;\n  }\n  return EJSON.parse(serialized);\n}\n\nfunction changed(v) {\n  v && v.changed();\n}\n\n// XXX COMPAT WITH 0.9.1 : accept migrationData instead of dictName\n/**\n * @class\n * @instanceName ReactiveDict\n * @summary Constructor for a ReactiveDict, which represents a reactive dictionary of key/value pairs.\n * @locus Client\n * @param {String} [name] Optional.  When a name is passed, preserves contents across Hot Code Pushes\n * @param {Object} [initialValue] Optional.  The default values for the dictionary\n */\nexport class ReactiveDict {\n  constructor(dictName, dictData) {\n    // this.keys: key -> value\n    this.keys = {};\n\n    if (dictName) {\n      // name given; migration will be performed\n      if (typeof dictName === 'string') {\n        // the normal case, argument is a string name.\n\n        // Only run migration logic on client, it will cause\n        // duplicate name errors on server during reloads.\n        // _registerDictForMigrate will throw an error on duplicate name.\n        Meteor.isClient && ReactiveDict._registerDictForMigrate(dictName, this);\n        const migratedData = Meteor.isClient && ReactiveDict._loadMigratedDict(dictName);\n\n        if (migratedData) {\n          // Don't stringify migrated data\n          this.keys = migratedData;\n        } else {\n          // Use _setObject to make sure values are stringified\n          this._setObject(dictData || {});\n        }\n        this.name = dictName;\n      } else if (typeof dictName === 'object') {\n        // back-compat case: dictName is actually migrationData\n        // Use _setObject to make sure values are stringified\n        this._setObject(dictName);\n      } else {\n        throw new Error(\"Invalid ReactiveDict argument: \" + dictName);\n      }\n    } else if (typeof dictData === 'object') {\n      this._setObject(dictData);\n    }\n\n    this.allDeps = new Tracker.Dependency;\n    this.keyDeps = {}; // key -> Dependency\n    this.keyValueDeps = {}; // key -> Dependency\n  }\n\n  // set() began as a key/value method, but we are now overloading it\n  // to take an object of key/value pairs, similar to backbone\n  // http://backbonejs.org/#Model-set\n  /**\n   * @summary Set a value for a key in the ReactiveDict. Notify any listeners\n   * that the value has changed (eg: redraw templates, and rerun any\n   * [`Tracker.autorun`](#tracker_autorun) computations, that called\n   * [`ReactiveDict.get`](#ReactiveDict_get) on this `key`.)\n   * @locus Client\n   * @param {String} key The key to set, eg, `selectedItem`\n   * @param {EJSONable | undefined} value The new value for `key`\n   */\n  set(keyOrObject, value) {\n    if ((typeof keyOrObject === 'object') && (value === undefined)) {\n      // Called as `dict.set({...})`\n      this._setObject(keyOrObject);\n      return;\n    }\n    // the input isn't an object, so it must be a key\n    // and we resume with the rest of the function\n    const key = keyOrObject;\n\n    value = stringify(value);\n\n    const keyExisted = hasOwn.call(this.keys, key);\n    const oldSerializedValue = keyExisted ? this.keys[key] : 'undefined';\n    const isNewValue = (value !== oldSerializedValue);\n\n    this.keys[key] = value;\n\n    if (isNewValue || !keyExisted) {\n      // Using the changed utility function here because this.allDeps might not exist yet,\n      // when setting initial data from constructor\n      changed(this.allDeps);\n    }\n\n    // Don't trigger changes when setting initial data from constructor,\n    // this.KeyDeps is undefined in this case\n    if (isNewValue && this.keyDeps) {\n      changed(this.keyDeps[key]);\n      if (this.keyValueDeps[key]) {\n        changed(this.keyValueDeps[key][oldSerializedValue]);\n        changed(this.keyValueDeps[key][value]);\n      }\n    }\n  }\n\n  /**\n   * @summary Set a value for a key if it hasn't been set before.\n   * Otherwise works exactly the same as [`ReactiveDict.set`](#ReactiveDict-set).\n   * @locus Client\n   * @param {String} key The key to set, eg, `selectedItem`\n   * @param {EJSONable | undefined} value The new value for `key`\n   */\n  setDefault(keyOrObject, value) {\n    if ((typeof keyOrObject === 'object') && (value === undefined)) {\n      // Called as `dict.setDefault({...})`\n      this._setDefaultObject(keyOrObject);\n      return;\n    }\n    // the input isn't an object, so it must be a key\n    // and we resume with the rest of the function\n    const key = keyOrObject;\n\n    if (! hasOwn.call(this.keys, key)) {\n      this.set(key, value);\n    }\n  }\n\n  /**\n   * @summary Get the value assiciated with a key. If inside a [reactive\n   * computation](#reactivity), invalidate the computation the next time the\n   * value associated with this key is changed by\n   * [`ReactiveDict.set`](#ReactiveDict-set).\n   * This returns a clone of the value, so if it's an object or an array,\n   * mutating the returned value has no effect on the value stored in the\n   * ReactiveDict.\n   * @locus Client\n   * @param {String} key The key of the element to return\n   */\n  get(key) {\n    this._ensureKey(key);\n    this.keyDeps[key].depend();\n    return parse(this.keys[key]);\n  }\n\n  /**\n   * @summary Test if the stored entry for a key is equal to a value. If inside a\n   * [reactive computation](#reactivity), invalidate the computation the next\n   * time the variable changes to or from the value.\n   * @locus Client\n   * @param {String} key The name of the session variable to test\n   * @param {String | Number | Boolean | null | undefined} value The value to\n   * test against\n   */\n  equals(key, value) {\n    // Mongo.ObjectID is in the 'mongo' package\n    let ObjectID = null;\n    if (Package.mongo) {\n      ObjectID = Package.mongo.Mongo.ObjectID;\n    }\n    // We don't allow objects (or arrays that might include objects) for\n    // .equals, because JSON.stringify doesn't canonicalize object key\n    // order. (We can make equals have the right return value by parsing the\n    // current value and using EJSON.equals, but we won't have a canonical\n    // element of keyValueDeps[key] to store the dependency.) You can still use\n    // \"EJSON.equals(reactiveDict.get(key), value)\".\n    //\n    // XXX we could allow arrays as long as we recursively check that there\n    // are no objects\n    if (typeof value !== 'string' &&\n        typeof value !== 'number' &&\n        typeof value !== 'boolean' &&\n        typeof value !== 'undefined' &&\n        !(value instanceof Date) &&\n        !(ObjectID && value instanceof ObjectID) &&\n        value !== null) {\n      throw new Error(\"ReactiveDict.equals: value must be scalar\");\n    }\n    const serializedValue = stringify(value);\n\n    if (Tracker.active) {\n      this._ensureKey(key);\n\n      if (! hasOwn.call(this.keyValueDeps[key], serializedValue)) {\n        this.keyValueDeps[key][serializedValue] = new Tracker.Dependency;\n      }\n\n      var isNew = this.keyValueDeps[key][serializedValue].depend();\n      if (isNew) {\n        Tracker.onInvalidate(() => {\n          // clean up [key][serializedValue] if it's now empty, so we don't\n          // use O(n) memory for n = values seen ever\n          if (! this.keyValueDeps[key][serializedValue].hasDependents()) {\n            delete this.keyValueDeps[key][serializedValue];\n          }\n        });\n      }\n    }\n\n    let oldValue = undefined;\n    if (hasOwn.call(this.keys, key)) {\n      oldValue = parse(this.keys[key]);\n    }\n    return EJSON.equals(oldValue, value);\n  }\n\n  /**\n   * @summary Get all key-value pairs as a plain object. If inside a [reactive\n   * computation](#reactivity), invalidate the computation the next time the\n   * value associated with any key is changed by\n   * [`ReactiveDict.set`](#ReactiveDict-set).\n   * This returns a clone of each value, so if it's an object or an array,\n   * mutating the returned value has no effect on the value stored in the\n   * ReactiveDict.\n   * @locus Client\n   */\n  all() {\n    this.allDeps.depend();\n    let ret = {};\n    Object.keys(this.keys).forEach(key => {\n      ret[key] = parse(this.keys[key]);\n    });\n    return ret;\n  }\n\n  /**\n   * @summary remove all key-value pairs from the ReactiveDict. Notify any\n   * listeners that the value has changed (eg: redraw templates, and rerun any\n   * [`Tracker.autorun`](#tracker_autorun) computations, that called\n   * [`ReactiveDict.get`](#ReactiveDict_get) on this `key`.)\n   * @locus Client\n   */\n  clear() {\n    const oldKeys = this.keys;\n    this.keys = {};\n\n    this.allDeps.changed();\n\n    Object.keys(oldKeys).forEach(key => {\n      changed(this.keyDeps[key]);\n      if (this.keyValueDeps[key]) {\n        changed(this.keyValueDeps[key][oldKeys[key]]);\n        changed(this.keyValueDeps[key]['undefined']);\n      }\n    });\n  }\n\n  /**\n   * @summary remove a key-value pair from the ReactiveDict. Notify any listeners\n   * that the value has changed (eg: redraw templates, and rerun any\n   * [`Tracker.autorun`](#tracker_autorun) computations, that called\n   * [`ReactiveDict.get`](#ReactiveDict_get) on this `key`.)\n   * @locus Client\n   * @param {String} key The key to delete, eg, `selectedItem`\n   */\n  delete(key) {\n    let didRemove = false;\n\n    if (hasOwn.call(this.keys, key)) {\n      const oldValue = this.keys[key];\n      delete this.keys[key];\n      changed(this.keyDeps[key]);\n      if (this.keyValueDeps[key]) {\n        changed(this.keyValueDeps[key][oldValue]);\n        changed(this.keyValueDeps[key]['undefined']);\n      }\n      this.allDeps.changed();\n      didRemove = true;\n    }\n    return didRemove;\n  }\n\n  /**\n   * @summary Clear all values from the reactiveDict and prevent it from being\n   * migrated on a Hot Code Pushes. Notify any listeners\n   * that the value has changed (eg: redraw templates, and rerun any\n   * [`Tracker.autorun`](#tracker_autorun) computations, that called\n   * [`ReactiveDict.get`](#ReactiveDict_get) on this `key`.)\n   * @locus Client\n   */\n  destroy() {\n    this.clear();\n    if (this.name && hasOwn.call(ReactiveDict._dictsToMigrate, this.name)) {\n      delete ReactiveDict._dictsToMigrate[this.name];\n    }\n  }\n\n  _setObject(object) {\n    Object.keys(object).forEach(key => {\n      this.set(key, object[key]);\n    });\n  }\n\n  _setDefaultObject(object) {\n    Object.keys(object).forEach(key => {\n      this.setDefault(key, object[key]);\n    });\n  }\n\n  _ensureKey(key) {\n    if (!(key in this.keyDeps)) {\n      this.keyDeps[key] = new Tracker.Dependency;\n      this.keyValueDeps[key] = {};\n    }\n  }\n\n  // Get a JSON value that can be passed to the constructor to\n  // create a new ReactiveDict with the same contents as this one\n  _getMigrationData() {\n    // XXX sanitize and make sure it's JSONible?\n    return this.keys;\n  }\n}\n"]}