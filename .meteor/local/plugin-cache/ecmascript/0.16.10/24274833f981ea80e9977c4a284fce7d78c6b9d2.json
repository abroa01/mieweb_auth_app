{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/node_modules/framer-motion/dist/es/utils/interpolate.mjs","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"node_modules/framer-motion/dist/es/utils/interpolate.mjs","filename":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/node_modules/framer-motion/dist/es/utils/interpolate.mjs","inputSourceMap":{"version":3,"names":["clamp","pipe","progress","invariant","noop","mix","createMixers","output","ease","customMixer","mixers","mixerFactory","numMixers","length","i","mixer","easingFunction","Array","isArray","push","interpolate","input","isClamp","inputLength","reverse","interpolator","v","progressInRange"],"sources":["node_modules/framer-motion/dist/es/utils/interpolate.mjs"],"sourcesContent":["import { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { invariant, noop } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n"],"mappings":"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","ignoreList":[]},"targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth","root":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/node_modules/framer-motion/dist/es/utils/interpolate.mjs","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"node_modules/framer-motion/dist/es/utils/interpolate.mjs","inputSourceMap":{"version":3,"names":["clamp","pipe","progress","invariant","noop","mix","createMixers","output","ease","customMixer","mixers","mixerFactory","numMixers","length","i","mixer","easingFunction","Array","isArray","push","interpolate","input","isClamp","inputLength","reverse","interpolator","v","progressInRange"],"sources":["node_modules/framer-motion/dist/es/utils/interpolate.mjs"],"sourcesContent":["import { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { invariant, noop } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n"],"mappings":"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","ignoreList":[]}}},"code":"!function (module1) {\n  module1.export({\n    interpolate: () => interpolate\n  });\n  let clamp;\n  module1.link(\"./clamp.mjs\", {\n    clamp(v) {\n      clamp = v;\n    }\n  }, 0);\n  let pipe;\n  module1.link(\"./pipe.mjs\", {\n    pipe(v) {\n      pipe = v;\n    }\n  }, 1);\n  let progress;\n  module1.link(\"./progress.mjs\", {\n    progress(v) {\n      progress = v;\n    }\n  }, 2);\n  let invariant, noop;\n  module1.link(\"motion-utils\", {\n    invariant(v) {\n      invariant = v;\n    },\n    noop(v) {\n      noop = v;\n    }\n  }, 3);\n  let mix;\n  module1.link(\"./mix/index.mjs\", {\n    mix(v) {\n      mix = v;\n    }\n  }, 4);\n  ___INIT_METEOR_FAST_REFRESH(module);\n  function createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n      let mixer = mixerFactory(output[i], output[i + 1]);\n      if (ease) {\n        const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n        mixer = pipe(easingFunction, mixer);\n      }\n      mixers.push(mixer);\n    }\n    return mixers;\n  }\n  /**\n   * Create a function that maps from a numerical input array to a generic output array.\n   *\n   * Accepts:\n   *   - Numbers\n   *   - Colors (hex, hsl, hsla, rgb, rgba)\n   *   - Complex (combinations of one or more numbers or strings)\n   *\n   * ```jsx\n   * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n   *\n   * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n   * ```\n   *\n   * TODO Revist this approach once we've moved to data models for values,\n   * probably not needed to pregenerate mixer functions.\n   *\n   * @public\n   */\n  function interpolate(input, output) {\n    let {\n      clamp: isClamp = true,\n      ease,\n      mixer\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1) return () => output[0];\n    if (inputLength === 2 && input[0] === input[1]) return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n      input = [...input].reverse();\n      output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = v => {\n      let i = 0;\n      if (numMixers > 1) {\n        for (; i < input.length - 2; i++) {\n          if (v < input[i + 1]) break;\n        }\n      }\n      const progressInRange = progress(input[i], input[i + 1], v);\n      return mixers[i](progressInRange);\n    };\n    return isClamp ? v => interpolator(clamp(input[0], input[inputLength - 1], v)) : interpolator;\n  }\n}.call(this, module);","map":{"version":3,"names":["createMixers","output","ease","customMixer","mixers","mixerFactory","mix","numMixers","length","i","mixer","easingFunction","Array","isArray","noop","pipe","push","interpolate","input","clamp","isClamp","arguments","undefined","inputLength","invariant","reverse","interpolator","v","progressInRange","progress","call","module"],"sources":["node_modules/framer-motion/dist/es/utils/interpolate.mjs"],"sourcesContent":["import { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { invariant, noop } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"24274833f981ea80e9977c4a284fce7d78c6b9d2"}
