{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/node_modules/framer-motion/dist/es/value/index.mjs","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"node_modules/framer-motion/dist/es/value/index.mjs","filename":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/node_modules/framer-motion/dist/es/value/index.mjs","inputSourceMap":{"version":3,"names":["time","SubscriptionManager","velocityPerSecond","warnOnce","frame","MAX_VELOCITY_DELTA","isFloat","value","isNaN","parseFloat","collectMotionValues","current","undefined","MotionValue","constructor","init","options","version","canTrackVelocity","events","updateAndNotify","v","render","currentTime","now","updatedAt","setPrevFrameValue","prev","setCurrent","change","notify","renderRequest","hasAnimated","owner","prevFrameValue","prevUpdatedAt","onChange","subscription","process","env","NODE_ENV","on","eventName","callback","unsubscribe","add","read","getSize","stop","clearListeners","eventManagers","clear","attach","passiveEffect","stopPassiveEffect","set","setWithVelocity","delta","jump","endAnimation","get","push","getPrevious","getVelocity","Math","min","start","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue"],"sources":["node_modules/framer-motion/dist/es/value/index.mjs"],"sourcesContent":["import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.18.2\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n"],"mappings":"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","ignoreList":[]},"targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth","root":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/node_modules/framer-motion/dist/es/value/index.mjs","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"node_modules/framer-motion/dist/es/value/index.mjs","inputSourceMap":{"version":3,"names":["time","SubscriptionManager","velocityPerSecond","warnOnce","frame","MAX_VELOCITY_DELTA","isFloat","value","isNaN","parseFloat","collectMotionValues","current","undefined","MotionValue","constructor","init","options","version","canTrackVelocity","events","updateAndNotify","v","render","currentTime","now","updatedAt","setPrevFrameValue","prev","setCurrent","change","notify","renderRequest","hasAnimated","owner","prevFrameValue","prevUpdatedAt","onChange","subscription","process","env","NODE_ENV","on","eventName","callback","unsubscribe","add","read","getSize","stop","clearListeners","eventManagers","clear","attach","passiveEffect","stopPassiveEffect","set","setWithVelocity","delta","jump","endAnimation","get","push","getPrevious","getVelocity","Math","min","start","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue"],"sources":["node_modules/framer-motion/dist/es/value/index.mjs"],"sourcesContent":["import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.18.2\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n"],"mappings":"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","ignoreList":[]}}},"code":"!function (module1) {\n  module1.export({\n    MotionValue: () => MotionValue,\n    collectMotionValues: () => collectMotionValues,\n    motionValue: () => motionValue\n  });\n  let time;\n  module1.link(\"../frameloop/sync-time.mjs\", {\n    time(v) {\n      time = v;\n    }\n  }, 0);\n  let SubscriptionManager;\n  module1.link(\"../utils/subscription-manager.mjs\", {\n    SubscriptionManager(v) {\n      SubscriptionManager = v;\n    }\n  }, 1);\n  let velocityPerSecond;\n  module1.link(\"../utils/velocity-per-second.mjs\", {\n    velocityPerSecond(v) {\n      velocityPerSecond = v;\n    }\n  }, 2);\n  let warnOnce;\n  module1.link(\"../utils/warn-once.mjs\", {\n    warnOnce(v) {\n      warnOnce = v;\n    }\n  }, 3);\n  let frame;\n  module1.link(\"../frameloop/frame.mjs\", {\n    frame(v) {\n      frame = v;\n    }\n  }, 4);\n  ___INIT_METEOR_FAST_REFRESH(module);\n  /**\n   * Maximum time between the value of two frames, beyond which we\n   * assume the velocity has since been 0.\n   */\n  const MAX_VELOCITY_DELTA = 30;\n  const isFloat = value => {\n    return !isNaN(parseFloat(value));\n  };\n  const collectMotionValues = {\n    current: undefined\n  };\n  /**\n   * `MotionValue` is used to track the state and velocity of motion values.\n   *\n   * @public\n   */\n  class MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init) {\n      var _this = this;\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      /**\n       * This will be replaced by the build step with the latest version number.\n       * When MotionValues are provided to motion components, warn if versions are mixed.\n       */\n      this.version = \"11.18.2\";\n      /**\n       * Tracks whether this value can output a velocity. Currently this is only true\n       * if the value is numerical, but we might be able to widen the scope here and support\n       * other value types.\n       *\n       * @internal\n       */\n      this.canTrackVelocity = null;\n      /**\n       * An object containing a SubscriptionManager for each active event.\n       */\n      this.events = {};\n      this.updateAndNotify = function (v) {\n        let render = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        const currentTime = time.now();\n        /**\n         * If we're updating the value during another frame or eventloop\n         * than the previous frame, then the we set the previous frame value\n         * to current.\n         */\n        if (_this.updatedAt !== currentTime) {\n          _this.setPrevFrameValue();\n        }\n        _this.prev = _this.current;\n        _this.setCurrent(v);\n        // Update update subscribers\n        if (_this.current !== _this.prev && _this.events.change) {\n          _this.events.change.notify(_this.current);\n        }\n        // Update render subscribers\n        if (render && _this.events.renderRequest) {\n          _this.events.renderRequest.notify(_this.current);\n        }\n      };\n      this.hasAnimated = false;\n      this.setCurrent(init);\n      this.owner = options.owner;\n    }\n    setCurrent(current) {\n      this.current = current;\n      this.updatedAt = time.now();\n      if (this.canTrackVelocity === null && current !== undefined) {\n        this.canTrackVelocity = isFloat(this.current);\n      }\n    }\n    setPrevFrameValue() {\n      let prevFrameValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.current;\n      this.prevFrameValue = prevFrameValue;\n      this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n      if (process.env.NODE_ENV !== \"production\") {\n        warnOnce(false, \"value.onChange(callback) is deprecated. Switch to value.on(\\\"change\\\", callback).\");\n      }\n      return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n      if (!this.events[eventName]) {\n        this.events[eventName] = new SubscriptionManager();\n      }\n      const unsubscribe = this.events[eventName].add(callback);\n      if (eventName === \"change\") {\n        return () => {\n          unsubscribe();\n          /**\n           * If we have no more change listeners by the start\n           * of the next frame, stop active animations.\n           */\n          frame.read(() => {\n            if (!this.events.change.getSize()) {\n              this.stop();\n            }\n          });\n        };\n      }\n      return unsubscribe;\n    }\n    clearListeners() {\n      for (const eventManagers in this.events) {\n        this.events[eventManagers].clear();\n      }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n      this.passiveEffect = passiveEffect;\n      this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v) {\n      let render = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (!render || !this.passiveEffect) {\n        this.updateAndNotify(v, render);\n      } else {\n        this.passiveEffect(v, this.updateAndNotify);\n      }\n    }\n    setWithVelocity(prev, current, delta) {\n      this.set(current);\n      this.prev = undefined;\n      this.prevFrameValue = prev;\n      this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n      let endAnimation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.updateAndNotify(v);\n      this.prev = v;\n      this.prevUpdatedAt = this.prevFrameValue = undefined;\n      endAnimation && this.stop();\n      if (this.stopPassiveEffect) this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n      if (collectMotionValues.current) {\n        collectMotionValues.current.push(this);\n      }\n      return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n      return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n      const currentTime = time.now();\n      if (!this.canTrackVelocity || this.prevFrameValue === undefined || currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n        return 0;\n      }\n      const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n      // Casts because of parseFloat's poor typing\n      return velocityPerSecond(parseFloat(this.current) - parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n      this.stop();\n      return new Promise(resolve => {\n        this.hasAnimated = true;\n        this.animation = startAnimation(resolve);\n        if (this.events.animationStart) {\n          this.events.animationStart.notify();\n        }\n      }).then(() => {\n        if (this.events.animationComplete) {\n          this.events.animationComplete.notify();\n        }\n        this.clearAnimation();\n      });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n      if (this.animation) {\n        this.animation.stop();\n        if (this.events.animationCancel) {\n          this.events.animationCancel.notify();\n        }\n      }\n      this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n      return !!this.animation;\n    }\n    clearAnimation() {\n      delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n      this.clearListeners();\n      this.stop();\n      if (this.stopPassiveEffect) {\n        this.stopPassiveEffect();\n      }\n    }\n  }\n  function motionValue(init, options) {\n    return new MotionValue(init, options);\n  }\n}.call(this, module);","map":{"version":3,"names":["MAX_VELOCITY_DELTA","isFloat","value","isNaN","parseFloat","collectMotionValues","current","undefined","MotionValue","constructor","init","_this","options","arguments","length","version","canTrackVelocity","events","updateAndNotify","v","render","currentTime","time","now","updatedAt","setPrevFrameValue","prev","setCurrent","change","notify","renderRequest","hasAnimated","owner","prevFrameValue","prevUpdatedAt","onChange","subscription","process","env","NODE_ENV","warnOnce","on","eventName","callback","SubscriptionManager","unsubscribe","add","frame","read","getSize","stop","clearListeners","eventManagers","clear","attach","passiveEffect","stopPassiveEffect","set","setWithVelocity","delta","jump","endAnimation","get","push","getPrevious","getVelocity","Math","min","velocityPerSecond","start","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","call","module"],"sources":["node_modules/framer-motion/dist/es/value/index.mjs"],"sourcesContent":["import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.18.2\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"2d7ff8ce01d7ec876831ae59479e64b27510b939"}
