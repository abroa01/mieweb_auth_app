{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/imports/api/notificationHistory.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"imports/api/notificationHistory.js","filename":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/imports/api/notificationHistory.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth","root":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/imports/api/notificationHistory.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/api/notificationHistory.js"}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      NotificationHistory: () => NotificationHistory\n    });\n    let Mongo;\n    module.link(\"meteor/mongo\", {\n      Mongo(v) {\n        Mongo = v;\n      }\n    }, 0);\n    let check;\n    module.link(\"meteor/check\", {\n      check(v) {\n        check = v;\n      }\n    }, 1);\n    let Random;\n    module.link(\"meteor/random\", {\n      Random(v) {\n        Random = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const NotificationHistory = new Mongo.Collection('notificationHistory');\n    // Create indexes for better query performance\n    if (Meteor.isServer) {\n      Meteor.startup(() => {\n        NotificationHistory.createIndex({\n          userId: 1\n        });\n        NotificationHistory.createIndex({\n          appId: 1\n        });\n        NotificationHistory.createIndex({\n          notificationId: 1\n        });\n        NotificationHistory.createIndex({\n          status: 1\n        });\n      });\n    }\n    Meteor.methods({\n      // Insert a new notification into the history\n      'notificationHistory.insert': function (data) {\n        check(data, {\n          userId: String,\n          appId: String,\n          title: String,\n          body: String\n        });\n\n        // Dynamically generate a unique notificationId\n        const notificationId = Random.id();\n        return NotificationHistory.insertAsync({\n          userId: data.userId,\n          appId: data.appId,\n          notificationId: notificationId,\n          title: data.title,\n          body: data.body,\n          status: 'pending',\n          createdAt: new Date()\n        });\n      },\n      // Update the status of a notification\n      'notificationHistory.updateStatus': function (notificationId, status) {\n        check(notificationId, String);\n        check(status, String);\n        if (!['pending', 'approved', 'rejected'].includes(status)) {\n          throw new Meteor.Error('invalid-status', 'Status must be pending, accepted, or rejected');\n        }\n        return NotificationHistory.updateAsync({\n          notificationId\n        }, {\n          $set: {\n            status: status,\n            updatedAt: new Date() // Timestamp for status update\n          }\n        });\n      },\n      // Fetch the last notification ID for a specific user\n      'notificationHistory.getLastIdByUser': function (userId) {\n        check(userId, String);\n        return NotificationHistory.findOneAsync({\n          userId\n        }, {\n          sort: {\n            createdAt: -1\n          },\n          fields: {\n            notificationId: 1\n          }\n        }).then(lastNotification => {\n          return lastNotification ? lastNotification.notificationId : null;\n        }).catch(error => {\n          console.error(\"Error fetching last notification:\", error);\n          throw new Meteor.Error(\"database-error\", \"Failed to fetch last notification\");\n        });\n      },\n      // Fetch all notifications for a user\n      'notificationHistory.getByUser': function (userId) {\n        check(userId, String);\n        return NotificationHistory.find({\n          userId\n        }).fetch();\n      },\n      // Fetch notifications by their status\n      'notificationHistory.getByStatus': function (status) {\n        check(status, String);\n        if (!['pending', 'accepted', 'rejected'].includes(status)) {\n          throw new Meteor.Error('invalid-status', 'Status must be pending, accepted, or rejected');\n        }\n        return NotificationHistory.find({\n          status\n        }).fetch();\n      }\n    });\n    if (Meteor.isServer) {\n      Meteor.publish('notificationHistory.byUser', function (userId) {\n        check(userId, String);\n        return NotificationHistory.find({\n          userId\n        });\n      });\n      Meteor.publish('notificationHistory.byStatus', function (status) {\n        check(status, String);\n        return NotificationHistory.find({\n          status\n        });\n      });\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","NotificationHistory","Mongo","link","v","check","Random","__reifyWaitForDeps__","Collection","Meteor","isServer","startup","createIndex","userId","appId","notificationId","status","methods","notificationHistory.insert","data","String","title","body","id","insertAsync","createdAt","Date","notificationHistory.updateStatus","includes","Error","updateAsync","$set","updatedAt","notificationHistory.getLastIdByUser","findOneAsync","sort","fields","then","lastNotification","catch","error","console","notificationHistory.getByUser","find","fetch","notificationHistory.getByStatus","publish","__reify_async_result__","_reifyError","self","async"],"sources":["imports/api/notificationHistory.js"],"sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\nimport { Random } from 'meteor/random';\n\nexport const NotificationHistory = new Mongo.Collection('notificationHistory');\n\n// Create indexes for better query performance\nif (Meteor.isServer) {\n  Meteor.startup(() => {\n    NotificationHistory.createIndex({ userId: 1 });\n    NotificationHistory.createIndex({ appId: 1 });\n    NotificationHistory.createIndex({ notificationId: 1 });\n    NotificationHistory.createIndex({ status: 1 });\n  });\n}\n\nMeteor.methods({\n  // Insert a new notification into the history\n  'notificationHistory.insert': function (data) {\n    check(data, {\n      userId: String,\n      appId: String,\n      title: String,\n      body: String,\n    });\n\n    // Dynamically generate a unique notificationId\n    const notificationId = Random.id();\n\n    return NotificationHistory.insertAsync({\n      userId: data.userId,\n      appId: data.appId,\n      notificationId: notificationId,\n      title: data.title,\n      body: data.body,\n      status: 'pending',\n      createdAt: new Date()\n    });\n  },\n\n  // Update the status of a notification\n  'notificationHistory.updateStatus': function (notificationId, status) {\n    check(notificationId, String);\n    check(status, String);\n\n    if (!['pending', 'approved', 'rejected'].includes(status)) {\n      throw new Meteor.Error('invalid-status', 'Status must be pending, accepted, or rejected');\n    }\n\n    return NotificationHistory.updateAsync(\n      { notificationId },\n      {\n        $set: {\n          status: status,\n          updatedAt: new Date(), // Timestamp for status update\n        },\n      }\n    );\n  },\n\n// Fetch the last notification ID for a specific user\n'notificationHistory.getLastIdByUser': function (userId) {\n  check(userId, String);\n\n  return NotificationHistory.findOneAsync(\n    { userId },\n    { sort: { createdAt: -1 }, fields: { notificationId: 1 } }\n  ).then((lastNotification) => {\n    return lastNotification ? lastNotification.notificationId : null;\n  }).catch((error) => {\n    console.error(\"Error fetching last notification:\", error);\n    throw new Meteor.Error(\"database-error\", \"Failed to fetch last notification\");\n  });\n},\n\n  // Fetch all notifications for a user\n  'notificationHistory.getByUser': function (userId) {\n    check(userId, String);\n    return NotificationHistory.find({ userId }).fetch();\n  },\n\n  // Fetch notifications by their status\n  'notificationHistory.getByStatus': function (status) {\n    check(status, String);\n\n    if (!['pending', 'accepted', 'rejected'].includes(status)) {\n      throw new Meteor.Error('invalid-status', 'Status must be pending, accepted, or rejected');\n    }\n\n    return NotificationHistory.find({ status }).fetch();\n  },\n});\n\nif (Meteor.isServer) {\n  Meteor.publish('notificationHistory.byUser', function (userId) {\n    check(userId, String);\n    return NotificationHistory.find({ userId });\n  });\n\n  Meteor.publish('notificationHistory.byStatus', function (status) {\n    check(status, String);\n    return NotificationHistory.find({ status });\n  });\n}\n\n\n"],"mappings":";;;IAAAA,MAAM,CAACC,MAAM,CAAC;MAACC,mBAAmB,EAACA,CAAA,KAAIA;IAAmB,CAAC,CAAC;IAAC,IAAIC,KAAK;IAACH,MAAM,CAACI,IAAI,CAAC,cAAc,EAAC;MAACD,KAAKA,CAACE,CAAC,EAAC;QAACF,KAAK,GAACE,CAAC;MAAA;IAAC,CAAC,EAAC,CAAC,CAAC;IAAC,IAAIC,KAAK;IAACN,MAAM,CAACI,IAAI,CAAC,cAAc,EAAC;MAACE,KAAKA,CAACD,CAAC,EAAC;QAACC,KAAK,GAACD,CAAC;MAAA;IAAC,CAAC,EAAC,CAAC,CAAC;IAAC,IAAIE,MAAM;IAACP,MAAM,CAACI,IAAI,CAAC,eAAe,EAAC;MAACG,MAAMA,CAACF,CAAC,EAAC;QAACE,MAAM,GAACF,CAAC;MAAA;IAAC,CAAC,EAAC,CAAC,CAAC;IAAC,IAAIG,oBAAoB,CAAC,CAAC,EAAE,CAAC,MAAMA,oBAAoB,CAAC,CAAC,EAAE,CAAC;IAI1S,MAAMN,mBAAmB,GAAG,IAAIC,KAAK,CAACM,UAAU,CAAC,qBAAqB,CAAC;IAE9E;IACA,IAAIC,MAAM,CAACC,QAAQ,EAAE;MACnBD,MAAM,CAACE,OAAO,CAAC,MAAM;QACnBV,mBAAmB,CAACW,WAAW,CAAC;UAAEC,MAAM,EAAE;QAAE,CAAC,CAAC;QAC9CZ,mBAAmB,CAACW,WAAW,CAAC;UAAEE,KAAK,EAAE;QAAE,CAAC,CAAC;QAC7Cb,mBAAmB,CAACW,WAAW,CAAC;UAAEG,cAAc,EAAE;QAAE,CAAC,CAAC;QACtDd,mBAAmB,CAACW,WAAW,CAAC;UAAEI,MAAM,EAAE;QAAE,CAAC,CAAC;MAChD,CAAC,CAAC;IACJ;IAEAP,MAAM,CAACQ,OAAO,CAAC;MACb;MACA,4BAA4B,EAAE,SAAAC,CAAUC,IAAI,EAAE;QAC5Cd,KAAK,CAACc,IAAI,EAAE;UACVN,MAAM,EAAEO,MAAM;UACdN,KAAK,EAAEM,MAAM;UACbC,KAAK,EAAED,MAAM;UACbE,IAAI,EAAEF;QACR,CAAC,CAAC;;QAEF;QACA,MAAML,cAAc,GAAGT,MAAM,CAACiB,EAAE,CAAC,CAAC;QAElC,OAAOtB,mBAAmB,CAACuB,WAAW,CAAC;UACrCX,MAAM,EAAEM,IAAI,CAACN,MAAM;UACnBC,KAAK,EAAEK,IAAI,CAACL,KAAK;UACjBC,cAAc,EAAEA,cAAc;UAC9BM,KAAK,EAAEF,IAAI,CAACE,KAAK;UACjBC,IAAI,EAAEH,IAAI,CAACG,IAAI;UACfN,MAAM,EAAE,SAAS;UACjBS,SAAS,EAAE,IAAIC,IAAI,CAAC;QACtB,CAAC,CAAC;MACJ,CAAC;MAED;MACA,kCAAkC,EAAE,SAAAC,CAAUZ,cAAc,EAAEC,MAAM,EAAE;QACpEX,KAAK,CAACU,cAAc,EAAEK,MAAM,CAAC;QAC7Bf,KAAK,CAACW,MAAM,EAAEI,MAAM,CAAC;QAErB,IAAI,CAAC,CAAC,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC,CAACQ,QAAQ,CAACZ,MAAM,CAAC,EAAE;UACzD,MAAM,IAAIP,MAAM,CAACoB,KAAK,CAAC,gBAAgB,EAAE,+CAA+C,CAAC;QAC3F;QAEA,OAAO5B,mBAAmB,CAAC6B,WAAW,CACpC;UAAEf;QAAe,CAAC,EAClB;UACEgB,IAAI,EAAE;YACJf,MAAM,EAAEA,MAAM;YACdgB,SAAS,EAAE,IAAIN,IAAI,CAAC,CAAC,CAAE;UACzB;QACF,CACF,CAAC;MACH,CAAC;MAEH;MACA,qCAAqC,EAAE,SAAAO,CAAUpB,MAAM,EAAE;QACvDR,KAAK,CAACQ,MAAM,EAAEO,MAAM,CAAC;QAErB,OAAOnB,mBAAmB,CAACiC,YAAY,CACrC;UAAErB;QAAO,CAAC,EACV;UAAEsB,IAAI,EAAE;YAAEV,SAAS,EAAE,CAAC;UAAE,CAAC;UAAEW,MAAM,EAAE;YAAErB,cAAc,EAAE;UAAE;QAAE,CAC3D,CAAC,CAACsB,IAAI,CAAEC,gBAAgB,IAAK;UAC3B,OAAOA,gBAAgB,GAAGA,gBAAgB,CAACvB,cAAc,GAAG,IAAI;QAClE,CAAC,CAAC,CAACwB,KAAK,CAAEC,KAAK,IAAK;UAClBC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;UACzD,MAAM,IAAI/B,MAAM,CAACoB,KAAK,CAAC,gBAAgB,EAAE,mCAAmC,CAAC;QAC/E,CAAC,CAAC;MACJ,CAAC;MAEC;MACA,+BAA+B,EAAE,SAAAa,CAAU7B,MAAM,EAAE;QACjDR,KAAK,CAACQ,MAAM,EAAEO,MAAM,CAAC;QACrB,OAAOnB,mBAAmB,CAAC0C,IAAI,CAAC;UAAE9B;QAAO,CAAC,CAAC,CAAC+B,KAAK,CAAC,CAAC;MACrD,CAAC;MAED;MACA,iCAAiC,EAAE,SAAAC,CAAU7B,MAAM,EAAE;QACnDX,KAAK,CAACW,MAAM,EAAEI,MAAM,CAAC;QAErB,IAAI,CAAC,CAAC,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC,CAACQ,QAAQ,CAACZ,MAAM,CAAC,EAAE;UACzD,MAAM,IAAIP,MAAM,CAACoB,KAAK,CAAC,gBAAgB,EAAE,+CAA+C,CAAC;QAC3F;QAEA,OAAO5B,mBAAmB,CAAC0C,IAAI,CAAC;UAAE3B;QAAO,CAAC,CAAC,CAAC4B,KAAK,CAAC,CAAC;MACrD;IACF,CAAC,CAAC;IAEF,IAAInC,MAAM,CAACC,QAAQ,EAAE;MACnBD,MAAM,CAACqC,OAAO,CAAC,4BAA4B,EAAE,UAAUjC,MAAM,EAAE;QAC7DR,KAAK,CAACQ,MAAM,EAAEO,MAAM,CAAC;QACrB,OAAOnB,mBAAmB,CAAC0C,IAAI,CAAC;UAAE9B;QAAO,CAAC,CAAC;MAC7C,CAAC,CAAC;MAEFJ,MAAM,CAACqC,OAAO,CAAC,8BAA8B,EAAE,UAAU9B,MAAM,EAAE;QAC/DX,KAAK,CAACW,MAAM,EAAEI,MAAM,CAAC;QACrB,OAAOnB,mBAAmB,CAAC0C,IAAI,CAAC;UAAE3B;QAAO,CAAC,CAAC;MAC7C,CAAC,CAAC;IACJ;IAAC+B,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"89b298e8bffed1c526e270eb224bec29f080e354"}
