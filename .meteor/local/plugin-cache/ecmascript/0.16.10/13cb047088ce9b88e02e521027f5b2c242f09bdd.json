{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","filename":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","inputSourceMap":{"version":3,"names":["px","pixelsToPercent","pixels","axis","max","min","correctBorderRadius","correct","latest","node","target","test","parseFloat","x","y"],"sources":["node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs"],"sourcesContent":["import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n"],"mappings":";AAAA,SAASA,EAAE,QAAQ,qCAAqC;AAExD,SAASC,eAAeA,CAACC,MAAM,EAAEC,IAAI,EAAE;EACnC,IAAIA,IAAI,CAACC,GAAG,KAAKD,IAAI,CAACE,GAAG,EACrB,OAAO,CAAC;EACZ,OAAQH,MAAM,IAAIC,IAAI,CAACC,GAAG,GAAGD,IAAI,CAACE,GAAG,CAAC,GAAI,GAAG;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,mBAAmB,GAAG;EACxBC,OAAO,EAAEA,CAACC,MAAM,EAAEC,IAAI,KAAK;IACvB,IAAI,CAACA,IAAI,CAACC,MAAM,EACZ,OAAOF,MAAM;IACjB;AACR;AACA;AACA;IACQ,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;MAC5B,IAAIR,EAAE,CAACW,IAAI,CAACH,MAAM,CAAC,EAAE;QACjBA,MAAM,GAAGI,UAAU,CAACJ,MAAM,CAAC;MAC/B,CAAC,MACI;QACD,OAAOA,MAAM;MACjB;IACJ;IACA;AACR;AACA;AACA;IACQ,MAAMK,CAAC,GAAGZ,eAAe,CAACO,MAAM,EAAEC,IAAI,CAACC,MAAM,CAACG,CAAC,CAAC;IAChD,MAAMC,CAAC,GAAGb,eAAe,CAACO,MAAM,EAAEC,IAAI,CAACC,MAAM,CAACI,CAAC,CAAC;IAChD,OAAO,GAAGD,CAAC,KAAKC,CAAC,GAAG;EACxB;AACJ,CAAC;AAED,SAASR,mBAAmB,EAAEL,eAAe","ignoreList":[]},"targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth","root":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","inputSourceMap":{"version":3,"names":["px","pixelsToPercent","pixels","axis","max","min","correctBorderRadius","correct","latest","node","target","test","parseFloat","x","y"],"sources":["node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs"],"sourcesContent":["import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n"],"mappings":";AAAA,SAASA,EAAE,QAAQ,qCAAqC;AAExD,SAASC,eAAeA,CAACC,MAAM,EAAEC,IAAI,EAAE;EACnC,IAAIA,IAAI,CAACC,GAAG,KAAKD,IAAI,CAACE,GAAG,EACrB,OAAO,CAAC;EACZ,OAAQH,MAAM,IAAIC,IAAI,CAACC,GAAG,GAAGD,IAAI,CAACE,GAAG,CAAC,GAAI,GAAG;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,mBAAmB,GAAG;EACxBC,OAAO,EAAEA,CAACC,MAAM,EAAEC,IAAI,KAAK;IACvB,IAAI,CAACA,IAAI,CAACC,MAAM,EACZ,OAAOF,MAAM;IACjB;AACR;AACA;AACA;IACQ,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;MAC5B,IAAIR,EAAE,CAACW,IAAI,CAACH,MAAM,CAAC,EAAE;QACjBA,MAAM,GAAGI,UAAU,CAACJ,MAAM,CAAC;MAC/B,CAAC,MACI;QACD,OAAOA,MAAM;MACjB;IACJ;IACA;AACR;AACA;AACA;IACQ,MAAMK,CAAC,GAAGZ,eAAe,CAACO,MAAM,EAAEC,IAAI,CAACC,MAAM,CAACG,CAAC,CAAC;IAChD,MAAMC,CAAC,GAAGb,eAAe,CAACO,MAAM,EAAEC,IAAI,CAACC,MAAM,CAACI,CAAC,CAAC;IAChD,OAAO,GAAGD,CAAC,KAAKC,CAAC,GAAG;EACxB;AACJ,CAAC;AAED,SAASR,mBAAmB,EAAEL,eAAe","ignoreList":[]}}},"code":"!function (module1) {\n  module1.export({\n    correctBorderRadius: () => correctBorderRadius,\n    pixelsToPercent: () => pixelsToPercent\n  });\n  let px;\n  module1.link(\"../../value/types/numbers/units.mjs\", {\n    px(v) {\n      px = v;\n    }\n  }, 0);\n  ___INIT_METEOR_FAST_REFRESH(module);\n  function pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min) return 0;\n    return pixels / (axis.max - axis.min) * 100;\n  }\n  /**\n   * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n   * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n   * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n   * borderRadius in both states. If we animate between the two in pixels that will trigger\n   * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n   */\n  const correctBorderRadius = {\n    correct: (latest, node) => {\n      if (!node.target) return latest;\n      /**\n       * If latest is a string, if it's a percentage we can return immediately as it's\n       * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n       */\n      if (typeof latest === \"string\") {\n        if (px.test(latest)) {\n          latest = parseFloat(latest);\n        } else {\n          return latest;\n        }\n      }\n      /**\n       * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n       * pixel value as a percentage of each axis\n       */\n      const x = pixelsToPercent(latest, node.target.x);\n      const y = pixelsToPercent(latest, node.target.y);\n      return \"\".concat(x, \"% \").concat(y, \"%\");\n    }\n  };\n}.call(this, module);","map":{"version":3,"names":["pixelsToPercent","pixels","axis","max","min","correctBorderRadius","correct","latest","node","target","px","test","parseFloat","x","y","concat","call","module"],"sources":["node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs"],"sourcesContent":["import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n"],"mappings":";;;;;;;;;;;;EAEA,SAASA,eAAeA,CAACC,MAAM,EAAEC,IAAI,EAAE;IACnC,IAAIA,IAAI,CAACC,GAAG,KAAKD,IAAI,CAACE,GAAG,EACrB,OAAO,CAAC;IACZ,OAAQH,MAAM,IAAIC,IAAI,CAACC,GAAG,GAAGD,IAAI,CAACE,GAAG,CAAC,GAAI,GAAG;EACjD;EACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,MAAMC,mBAAmB,GAAG;IACxBC,OAAO,EAAEA,CAACC,MAAM,EAAEC,IAAI,KAAK;MACvB,IAAI,CAACA,IAAI,CAACC,MAAM,EACZ,OAAOF,MAAM;MACjB;AACR;AACA;AACA;MACQ,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;QAC5B,IAAIG,EAAE,CAACC,IAAI,CAACJ,MAAM,CAAC,EAAE;UACjBA,MAAM,GAAGK,UAAU,CAACL,MAAM,CAAC;QAC/B,CAAC,MACI;UACD,OAAOA,MAAM;QACjB;MACJ;MACA;AACR;AACA;AACA;MACQ,MAAMM,CAAC,GAAGb,eAAe,CAACO,MAAM,EAAEC,IAAI,CAACC,MAAM,CAACI,CAAC,CAAC;MAChD,MAAMC,CAAC,GAAGd,eAAe,CAACO,MAAM,EAAEC,IAAI,CAACC,MAAM,CAACK,CAAC,CAAC;MAChD,UAAAC,MAAA,CAAUF,CAAC,QAAAE,MAAA,CAAKD,CAAC;IACrB;EACJ,CAAC;AAAA,EAAAE,IAAA,OAAAC,MAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"13cb047088ce9b88e02e521027f5b2c242f09bdd"}
