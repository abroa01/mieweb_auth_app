{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","filename":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","inputSourceMap":{"version":3,"names":["___INIT_METEOR_FAST_REFRESH","module","_s","$RefreshSig$","jsx","useContext","Component","usePresence","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","correctBorderRadius","correctBoxShadow","addScaleCorrector","microtask","frame","MeasureLayoutWithContext","componentDidMount","visualElement","layoutGroup","switchLayoutGroup","layoutId","props","projection","defaultScaleCorrectors","group","add","register","root","didUpdate","addEventListener","safeToRemove","setOptions","options","onExitComplete","hasEverUpdated","getSnapshotBeforeUpdate","prevProps","layoutDependency","drag","isPresent","undefined","willUpdate","promote","relegate","postRender","stack","getStack","members","length","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","render","MeasureLayout","_c","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","$RefreshReg$"],"sources":["node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n"],"mappings":"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","ignoreList":[]},"targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth","root":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","inputSourceMap":{"version":3,"names":["___INIT_METEOR_FAST_REFRESH","module","_s","$RefreshSig$","jsx","useContext","Component","usePresence","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","correctBorderRadius","correctBoxShadow","addScaleCorrector","microtask","frame","MeasureLayoutWithContext","componentDidMount","visualElement","layoutGroup","switchLayoutGroup","layoutId","props","projection","defaultScaleCorrectors","group","add","register","root","didUpdate","addEventListener","safeToRemove","setOptions","options","onExitComplete","hasEverUpdated","getSnapshotBeforeUpdate","prevProps","layoutDependency","drag","isPresent","undefined","willUpdate","promote","relegate","postRender","stack","getStack","members","length","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","render","MeasureLayout","_c","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","$RefreshReg$"],"sources":["node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n"],"mappings":"AAAA,YAAY;;AAACA,2BAAA,CAAAC,MAAA;AAAA,IAAAC,EAAA,GAAAC,YAAA;AACb,SAASC,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7C,SAASC,WAAW,QAAQ,sDAAsD;AAClF,SAASC,kBAAkB,QAAQ,yCAAyC;AAC5E,SAASC,wBAAwB,QAAQ,+CAA+C;AACxF,SAASC,qBAAqB,QAAQ,oCAAoC;AAC1E,SAASC,mBAAmB,QAAQ,oDAAoD;AACxF,SAASC,gBAAgB,QAAQ,iDAAiD;AAClF,SAASC,iBAAiB,QAAQ,iDAAiD;AACnF,SAASC,SAAS,QAAQ,kCAAkC;AAC5D,SAASC,KAAK,QAAQ,8BAA8B;AAEpD,MAAMC,wBAAwB,SAASV,SAAS,CAAC;EAC7C;AACJ;AACA;AACA;AACA;EACIW,iBAAiBA,CAAA,EAAG;IAChB,MAAM;MAAEC,aAAa;MAAEC,WAAW;MAAEC,iBAAiB;MAAEC;IAAS,CAAC,GAAG,IAAI,CAACC,KAAK;IAC9E,MAAM;MAAEC;IAAW,CAAC,GAAGL,aAAa;IACpCL,iBAAiB,CAACW,sBAAsB,CAAC;IACzC,IAAID,UAAU,EAAE;MACZ,IAAIJ,WAAW,CAACM,KAAK,EACjBN,WAAW,CAACM,KAAK,CAACC,GAAG,CAACH,UAAU,CAAC;MACrC,IAAIH,iBAAiB,IAAIA,iBAAiB,CAACO,QAAQ,IAAIN,QAAQ,EAAE;QAC7DD,iBAAiB,CAACO,QAAQ,CAACJ,UAAU,CAAC;MAC1C;MACAA,UAAU,CAACK,IAAI,CAACC,SAAS,CAAC,CAAC;MAC3BN,UAAU,CAACO,gBAAgB,CAAC,mBAAmB,EAAE,MAAM;QACnD,IAAI,CAACC,YAAY,CAAC,CAAC;MACvB,CAAC,CAAC;MACFR,UAAU,CAACS,UAAU,CAAC;QAClB,GAAGT,UAAU,CAACU,OAAO;QACrBC,cAAc,EAAEA,CAAA,KAAM,IAAI,CAACH,YAAY,CAAC;MAC5C,CAAC,CAAC;IACN;IACArB,qBAAqB,CAACyB,cAAc,GAAG,IAAI;EAC/C;EACAC,uBAAuBA,CAACC,SAAS,EAAE;IAC/B,MAAM;MAAEC,gBAAgB;MAAEpB,aAAa;MAAEqB,IAAI;MAAEC;IAAU,CAAC,GAAG,IAAI,CAAClB,KAAK;IACvE,MAAMC,UAAU,GAAGL,aAAa,CAACK,UAAU;IAC3C,IAAI,CAACA,UAAU,EACX,OAAO,IAAI;IACf;AACR;AACA;AACA;AACA;AACA;AACA;IACQA,UAAU,CAACiB,SAAS,GAAGA,SAAS;IAChC,IAAID,IAAI,IACJF,SAAS,CAACC,gBAAgB,KAAKA,gBAAgB,IAC/CA,gBAAgB,KAAKG,SAAS,EAAE;MAChClB,UAAU,CAACmB,UAAU,CAAC,CAAC;IAC3B,CAAC,MACI;MACD,IAAI,CAACX,YAAY,CAAC,CAAC;IACvB;IACA,IAAIM,SAAS,CAACG,SAAS,KAAKA,SAAS,EAAE;MACnC,IAAIA,SAAS,EAAE;QACXjB,UAAU,CAACoB,OAAO,CAAC,CAAC;MACxB,CAAC,MACI,IAAI,CAACpB,UAAU,CAACqB,QAAQ,CAAC,CAAC,EAAE;QAC7B;AAChB;AACA;AACA;AACA;QACgB7B,KAAK,CAAC8B,UAAU,CAAC,MAAM;UACnB,MAAMC,KAAK,GAAGvB,UAAU,CAACwB,QAAQ,CAAC,CAAC;UACnC,IAAI,CAACD,KAAK,IAAI,CAACA,KAAK,CAACE,OAAO,CAACC,MAAM,EAAE;YACjC,IAAI,CAAClB,YAAY,CAAC,CAAC;UACvB;QACJ,CAAC,CAAC;MACN;IACJ;IACA,OAAO,IAAI;EACf;EACAmB,kBAAkBA,CAAA,EAAG;IACjB,MAAM;MAAE3B;IAAW,CAAC,GAAG,IAAI,CAACD,KAAK,CAACJ,aAAa;IAC/C,IAAIK,UAAU,EAAE;MACZA,UAAU,CAACK,IAAI,CAACC,SAAS,CAAC,CAAC;MAC3Bf,SAAS,CAAC+B,UAAU,CAAC,MAAM;QACvB,IAAI,CAACtB,UAAU,CAAC4B,gBAAgB,IAAI5B,UAAU,CAAC6B,MAAM,CAAC,CAAC,EAAE;UACrD,IAAI,CAACrB,YAAY,CAAC,CAAC;QACvB;MACJ,CAAC,CAAC;IACN;EACJ;EACAsB,oBAAoBA,CAAA,EAAG;IACnB,MAAM;MAAEnC,aAAa;MAAEC,WAAW;MAAEC,iBAAiB,EAAEkC;IAAgB,CAAC,GAAG,IAAI,CAAChC,KAAK;IACrF,MAAM;MAAEC;IAAW,CAAC,GAAGL,aAAa;IACpC,IAAIK,UAAU,EAAE;MACZA,UAAU,CAACgC,yBAAyB,CAAC,CAAC;MACtC,IAAIpC,WAAW,IAAIA,WAAW,CAACM,KAAK,EAChCN,WAAW,CAACM,KAAK,CAAC+B,MAAM,CAACjC,UAAU,CAAC;MACxC,IAAI+B,cAAc,IAAIA,cAAc,CAACG,UAAU,EAC3CH,cAAc,CAACG,UAAU,CAAClC,UAAU,CAAC;IAC7C;EACJ;EACAQ,YAAYA,CAAA,EAAG;IACX,MAAM;MAAEA;IAAa,CAAC,GAAG,IAAI,CAACT,KAAK;IACnCS,YAAY,IAAIA,YAAY,CAAC,CAAC;EAClC;EACA2B,MAAMA,CAAA,EAAG;IACL,OAAO,IAAI;EACf;AACJ;AACA,SAASC,aAAaA,CAACrC,KAAK,EAAE;EAAApB,EAAA;EAC1B,MAAM,CAACsC,SAAS,EAAET,YAAY,CAAC,GAAGxB,WAAW,CAAC,CAAC;EAC/C,MAAMY,WAAW,GAAGd,UAAU,CAACG,kBAAkB,CAAC;EAClD,OAAQJ,GAAG,CAACY,wBAAwB,EAAE;IAAE,GAAGM,KAAK;IAAEH,WAAW,EAAEA,WAAW;IAAEC,iBAAiB,EAAEf,UAAU,CAACI,wBAAwB,CAAC;IAAE+B,SAAS,EAAEA,SAAS;IAAET,YAAY,EAAEA;EAAa,CAAC,CAAC;AAC5L;AAAC7B,EAAA,CAJQyD,aAAa;EAAA,QACgBpD,WAAW;AAAA;AAAAqD,EAAA,GADxCD,aAAa;AAKtB,MAAMnC,sBAAsB,GAAG;EAC3BqC,YAAY,EAAE;IACV,GAAGlD,mBAAmB;IACtBmD,OAAO,EAAE,CACL,qBAAqB,EACrB,sBAAsB,EACtB,wBAAwB,EACxB,yBAAyB;EAEjC,CAAC;EACDC,mBAAmB,EAAEpD,mBAAmB;EACxCqD,oBAAoB,EAAErD,mBAAmB;EACzCsD,sBAAsB,EAAEtD,mBAAmB;EAC3CuD,uBAAuB,EAAEvD,mBAAmB;EAC5CwD,SAAS,EAAEvD;AACf,CAAC;AAED,SAAS+C,aAAa;AAAG,IAAAC,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]}}},"code":"\"use client\";\n\n!function (module1) {\n  let _objectSpread;\n  module1.link(\"@babel/runtime/helpers/objectSpread2\", {\n    default(v) {\n      _objectSpread = v;\n    }\n  }, 0);\n  module1.export({\n    MeasureLayout: () => MeasureLayout\n  });\n  let jsx;\n  module1.link(\"react/jsx-runtime\", {\n    jsx(v) {\n      jsx = v;\n    }\n  }, 0);\n  let useContext, Component;\n  module1.link(\"react\", {\n    useContext(v) {\n      useContext = v;\n    },\n    Component(v) {\n      Component = v;\n    }\n  }, 1);\n  let usePresence;\n  module1.link(\"../../../components/AnimatePresence/use-presence.mjs\", {\n    usePresence(v) {\n      usePresence = v;\n    }\n  }, 2);\n  let LayoutGroupContext;\n  module1.link(\"../../../context/LayoutGroupContext.mjs\", {\n    LayoutGroupContext(v) {\n      LayoutGroupContext = v;\n    }\n  }, 3);\n  let SwitchLayoutGroupContext;\n  module1.link(\"../../../context/SwitchLayoutGroupContext.mjs\", {\n    SwitchLayoutGroupContext(v) {\n      SwitchLayoutGroupContext = v;\n    }\n  }, 4);\n  let globalProjectionState;\n  module1.link(\"../../../projection/node/state.mjs\", {\n    globalProjectionState(v) {\n      globalProjectionState = v;\n    }\n  }, 5);\n  let correctBorderRadius;\n  module1.link(\"../../../projection/styles/scale-border-radius.mjs\", {\n    correctBorderRadius(v) {\n      correctBorderRadius = v;\n    }\n  }, 6);\n  let correctBoxShadow;\n  module1.link(\"../../../projection/styles/scale-box-shadow.mjs\", {\n    correctBoxShadow(v) {\n      correctBoxShadow = v;\n    }\n  }, 7);\n  let addScaleCorrector;\n  module1.link(\"../../../projection/styles/scale-correction.mjs\", {\n    addScaleCorrector(v) {\n      addScaleCorrector = v;\n    }\n  }, 8);\n  let microtask;\n  module1.link(\"../../../frameloop/microtask.mjs\", {\n    microtask(v) {\n      microtask = v;\n    }\n  }, 9);\n  let frame;\n  module1.link(\"../../../frameloop/frame.mjs\", {\n    frame(v) {\n      frame = v;\n    }\n  }, 10);\n  ___INIT_METEOR_FAST_REFRESH(module);\n  var _s = $RefreshSig$();\n  class MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n      const {\n        visualElement,\n        layoutGroup,\n        switchLayoutGroup,\n        layoutId\n      } = this.props;\n      const {\n        projection\n      } = visualElement;\n      addScaleCorrector(defaultScaleCorrectors);\n      if (projection) {\n        if (layoutGroup.group) layoutGroup.group.add(projection);\n        if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n          switchLayoutGroup.register(projection);\n        }\n        projection.root.didUpdate();\n        projection.addEventListener(\"animationComplete\", () => {\n          this.safeToRemove();\n        });\n        projection.setOptions(_objectSpread(_objectSpread({}, projection.options), {}, {\n          onExitComplete: () => this.safeToRemove()\n        }));\n      }\n      globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n      const {\n        layoutDependency,\n        visualElement,\n        drag,\n        isPresent\n      } = this.props;\n      const projection = visualElement.projection;\n      if (!projection) return null;\n      /**\n       * TODO: We use this data in relegate to determine whether to\n       * promote a previous element. There's no guarantee its presence data\n       * will have updated by this point - if a bug like this arises it will\n       * have to be that we markForRelegation and then find a new lead some other way,\n       * perhaps in didUpdate\n       */\n      projection.isPresent = isPresent;\n      if (drag || prevProps.layoutDependency !== layoutDependency || layoutDependency === undefined) {\n        projection.willUpdate();\n      } else {\n        this.safeToRemove();\n      }\n      if (prevProps.isPresent !== isPresent) {\n        if (isPresent) {\n          projection.promote();\n        } else if (!projection.relegate()) {\n          /**\n           * If there's another stack member taking over from this one,\n           * it's in charge of the exit animation and therefore should\n           * be in charge of the safe to remove. Otherwise we call it here.\n           */\n          frame.postRender(() => {\n            const stack = projection.getStack();\n            if (!stack || !stack.members.length) {\n              this.safeToRemove();\n            }\n          });\n        }\n      }\n      return null;\n    }\n    componentDidUpdate() {\n      const {\n        projection\n      } = this.props.visualElement;\n      if (projection) {\n        projection.root.didUpdate();\n        microtask.postRender(() => {\n          if (!projection.currentAnimation && projection.isLead()) {\n            this.safeToRemove();\n          }\n        });\n      }\n    }\n    componentWillUnmount() {\n      const {\n        visualElement,\n        layoutGroup,\n        switchLayoutGroup: promoteContext\n      } = this.props;\n      const {\n        projection\n      } = visualElement;\n      if (projection) {\n        projection.scheduleCheckAfterUnmount();\n        if (layoutGroup && layoutGroup.group) layoutGroup.group.remove(projection);\n        if (promoteContext && promoteContext.deregister) promoteContext.deregister(projection);\n      }\n    }\n    safeToRemove() {\n      const {\n        safeToRemove\n      } = this.props;\n      safeToRemove && safeToRemove();\n    }\n    render() {\n      return null;\n    }\n  }\n  function MeasureLayout(props) {\n    _s();\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return jsx(MeasureLayoutWithContext, _objectSpread(_objectSpread({}, props), {}, {\n      layoutGroup: layoutGroup,\n      switchLayoutGroup: useContext(SwitchLayoutGroupContext),\n      isPresent: isPresent,\n      safeToRemove: safeToRemove\n    }));\n  }\n  _s(MeasureLayout, \"yNGbDR7vVbW3g5x+bSOH3lDhKv0=\", false, function () {\n    return [usePresence];\n  });\n  _c = MeasureLayout;\n  const defaultScaleCorrectors = {\n    borderRadius: _objectSpread(_objectSpread({}, correctBorderRadius), {}, {\n      applyTo: [\"borderTopLeftRadius\", \"borderTopRightRadius\", \"borderBottomLeftRadius\", \"borderBottomRightRadius\"]\n    }),\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow\n  };\n  var _c;\n  $RefreshReg$(_c, \"MeasureLayout\");\n}.call(this, module);","map":{"version":3,"names":["module1","_objectSpread","link","default","v","export","MeasureLayout","jsx","useContext","Component","usePresence","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","correctBorderRadius","correctBoxShadow","addScaleCorrector","microtask","frame","___INIT_METEOR_FAST_REFRESH","module","_s","$RefreshSig$","MeasureLayoutWithContext","componentDidMount","visualElement","layoutGroup","switchLayoutGroup","layoutId","props","projection","defaultScaleCorrectors","group","add","register","root","didUpdate","addEventListener","safeToRemove","setOptions","options","onExitComplete","hasEverUpdated","getSnapshotBeforeUpdate","prevProps","layoutDependency","drag","isPresent","undefined","willUpdate","promote","relegate","postRender","stack","getStack","members","length","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","render","_c","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","$RefreshReg$","call"],"sources":["node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n"],"mappings":"AAAA,YAAY;;AAAA,WAAAA,OAAA;EAAZ,IAAAC,aAAY;EAAAD,OAAA,CAAAE,IAAA;IAAAC,QAAAC,CAAA;MAAAH,aAAA,GAAAG,CAAA;IAAA;EAAA;EAAZJ,OAAA,CAAAK,MAAY;IAAAC,aAAA,EAAAA,CAAA,KAAAA;EAAA;EAAA,IAAAC,GAAA;EAAAP,OAAA,CAAAE,IAAA;IAAAK,IAAAH,CAAA;MAAAG,GAAA,GAAAH,CAAA;IAAA;EAAA;EAAA,IAAAI,UAAA,EAAAC,SAAA;EAAAT,OAAA,CAAAE,IAAA;IAAAM,WAAAJ,CAAA;MAAAI,UAAA,GAAAJ,CAAA;IAAA;IAAAK,UAAAL,CAAA;MAAAK,SAAA,GAAAL,CAAA;IAAA;EAAA;EAAA,IAAAM,WAAA;EAAAV,OAAA,CAAAE,IAAA;IAAAQ,YAAAN,CAAA;MAAAM,WAAA,GAAAN,CAAA;IAAA;EAAA;EAAA,IAAAO,kBAAA;EAAAX,OAAA,CAAAE,IAAA;IAAAS,mBAAAP,CAAA;MAAAO,kBAAA,GAAAP,CAAA;IAAA;EAAA;EAAA,IAAAQ,wBAAA;EAAAZ,OAAA,CAAAE,IAAA;IAAAU,yBAAAR,CAAA;MAAAQ,wBAAA,GAAAR,CAAA;IAAA;EAAA;EAAA,IAAAS,qBAAA;EAAAb,OAAA,CAAAE,IAAA;IAAAW,sBAAAT,CAAA;MAAAS,qBAAA,GAAAT,CAAA;IAAA;EAAA;EAAA,IAAAU,mBAAA;EAAAd,OAAA,CAAAE,IAAA;IAAAY,oBAAAV,CAAA;MAAAU,mBAAA,GAAAV,CAAA;IAAA;EAAA;EAAA,IAAAW,gBAAA;EAAAf,OAAA,CAAAE,IAAA;IAAAa,iBAAAX,CAAA;MAAAW,gBAAA,GAAAX,CAAA;IAAA;EAAA;EAAA,IAAAY,iBAAA;EAAAhB,OAAA,CAAAE,IAAA;IAAAc,kBAAAZ,CAAA;MAAAY,iBAAA,GAAAZ,CAAA;IAAA;EAAA;EAAA,IAAAa,SAAA;EAAAjB,OAAA,CAAAE,IAAA;IAAAe,UAAAb,CAAA;MAAAa,SAAA,GAAAb,CAAA;IAAA;EAAA;EAAA,IAAAc,KAAA;EAAAlB,OAAA,CAAAE,IAAA;IAAAgB,MAAAd,CAAA;MAAAc,KAAA,GAAAd,CAAA;IAAA;EAAA;EAACe,2BAAA,CAAAC,MAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAab,MAAMC,wBAAwB,SAASd,SAAS,CAAC;IAC7C;AACJ;AACA;AACA;AACA;IACIe,iBAAiBA,CAAA,EAAG;MAChB,MAAM;QAAEC,aAAa;QAAEC,WAAW;QAAEC,iBAAiB;QAAEC;MAAS,CAAC,GAAG,IAAI,CAACC,KAAK;MAC9E,MAAM;QAAEC;MAAW,CAAC,GAAGL,aAAa;MACpCT,iBAAiB,CAACe,sBAAsB,CAAC;MACzC,IAAID,UAAU,EAAE;QACZ,IAAIJ,WAAW,CAACM,KAAK,EACjBN,WAAW,CAACM,KAAK,CAACC,GAAG,CAACH,UAAU,CAAC;QACrC,IAAIH,iBAAiB,IAAIA,iBAAiB,CAACO,QAAQ,IAAIN,QAAQ,EAAE;UAC7DD,iBAAiB,CAACO,QAAQ,CAACJ,UAAU,CAAC;QAC1C;QACAA,UAAU,CAACK,IAAI,CAACC,SAAS,CAAC,CAAC;QAC3BN,UAAU,CAACO,gBAAgB,CAAC,mBAAmB,EAAE,MAAM;UACnD,IAAI,CAACC,YAAY,CAAC,CAAC;QACvB,CAAC,CAAC;QACFR,UAAU,CAACS,UAAU,CAAAtC,aAAA,CAAAA,aAAA,KACd6B,UAAU,CAACU,OAAO;UACrBC,cAAc,EAAEA,CAAA,KAAM,IAAI,CAACH,YAAY,CAAC;QAAA,EAC3C,CAAC;MACN;MACAzB,qBAAqB,CAAC6B,cAAc,GAAG,IAAI;IAC/C;IACAC,uBAAuBA,CAACC,SAAS,EAAE;MAC/B,MAAM;QAAEC,gBAAgB;QAAEpB,aAAa;QAAEqB,IAAI;QAAEC;MAAU,CAAC,GAAG,IAAI,CAAClB,KAAK;MACvE,MAAMC,UAAU,GAAGL,aAAa,CAACK,UAAU;MAC3C,IAAI,CAACA,UAAU,EACX,OAAO,IAAI;MACf;AACR;AACA;AACA;AACA;AACA;AACA;MACQA,UAAU,CAACiB,SAAS,GAAGA,SAAS;MAChC,IAAID,IAAI,IACJF,SAAS,CAACC,gBAAgB,KAAKA,gBAAgB,IAC/CA,gBAAgB,KAAKG,SAAS,EAAE;QAChClB,UAAU,CAACmB,UAAU,CAAC,CAAC;MAC3B,CAAC,MACI;QACD,IAAI,CAACX,YAAY,CAAC,CAAC;MACvB;MACA,IAAIM,SAAS,CAACG,SAAS,KAAKA,SAAS,EAAE;QACnC,IAAIA,SAAS,EAAE;UACXjB,UAAU,CAACoB,OAAO,CAAC,CAAC;QACxB,CAAC,MACI,IAAI,CAACpB,UAAU,CAACqB,QAAQ,CAAC,CAAC,EAAE;UAC7B;AAChB;AACA;AACA;AACA;UACgBjC,KAAK,CAACkC,UAAU,CAAC,MAAM;YACnB,MAAMC,KAAK,GAAGvB,UAAU,CAACwB,QAAQ,CAAC,CAAC;YACnC,IAAI,CAACD,KAAK,IAAI,CAACA,KAAK,CAACE,OAAO,CAACC,MAAM,EAAE;cACjC,IAAI,CAAClB,YAAY,CAAC,CAAC;YACvB;UACJ,CAAC,CAAC;QACN;MACJ;MACA,OAAO,IAAI;IACf;IACAmB,kBAAkBA,CAAA,EAAG;MACjB,MAAM;QAAE3B;MAAW,CAAC,GAAG,IAAI,CAACD,KAAK,CAACJ,aAAa;MAC/C,IAAIK,UAAU,EAAE;QACZA,UAAU,CAACK,IAAI,CAACC,SAAS,CAAC,CAAC;QAC3BnB,SAAS,CAACmC,UAAU,CAAC,MAAM;UACvB,IAAI,CAACtB,UAAU,CAAC4B,gBAAgB,IAAI5B,UAAU,CAAC6B,MAAM,CAAC,CAAC,EAAE;YACrD,IAAI,CAACrB,YAAY,CAAC,CAAC;UACvB;QACJ,CAAC,CAAC;MACN;IACJ;IACAsB,oBAAoBA,CAAA,EAAG;MACnB,MAAM;QAAEnC,aAAa;QAAEC,WAAW;QAAEC,iBAAiB,EAAEkC;MAAgB,CAAC,GAAG,IAAI,CAAChC,KAAK;MACrF,MAAM;QAAEC;MAAW,CAAC,GAAGL,aAAa;MACpC,IAAIK,UAAU,EAAE;QACZA,UAAU,CAACgC,yBAAyB,CAAC,CAAC;QACtC,IAAIpC,WAAW,IAAIA,WAAW,CAACM,KAAK,EAChCN,WAAW,CAACM,KAAK,CAAC+B,MAAM,CAACjC,UAAU,CAAC;QACxC,IAAI+B,cAAc,IAAIA,cAAc,CAACG,UAAU,EAC3CH,cAAc,CAACG,UAAU,CAAClC,UAAU,CAAC;MAC7C;IACJ;IACAQ,YAAYA,CAAA,EAAG;MACX,MAAM;QAAEA;MAAa,CAAC,GAAG,IAAI,CAACT,KAAK;MACnCS,YAAY,IAAIA,YAAY,CAAC,CAAC;IAClC;IACA2B,MAAMA,CAAA,EAAG;MACL,OAAO,IAAI;IACf;EACJ;EACA,SAAS3D,aAAaA,CAACuB,KAAK,EAAE;IAAAR,EAAA;IAC1B,MAAM,CAAC0B,SAAS,EAAET,YAAY,CAAC,GAAG5B,WAAW,CAAC,CAAC;IAC/C,MAAMgB,WAAW,GAAGlB,UAAU,CAACG,kBAAkB,CAAC;IAClD,OAAQJ,GAAG,CAACgB,wBAAwB,EAAAtB,aAAA,CAAAA,aAAA,KAAO4B,KAAK;MAAEH,WAAW,EAAEA,WAAW;MAAEC,iBAAiB,EAAEnB,UAAU,CAACI,wBAAwB,CAAC;MAAEmC,SAAS,EAAEA,SAAS;MAAET,YAAY,EAAEA;IAAA,EAAc,CAAC;EAC5L;EAACjB,EAAA,CAJQf,aAAa;IAAA,QACgBI,WAAW;EAAA;EAAAwD,EAAA,GADxC5D,aAAa;EAKtB,MAAMyB,sBAAsB,GAAG;IAC3BoC,YAAY,EAAAlE,aAAA,CAAAA,aAAA,KACLa,mBAAmB;MACtBsD,OAAO,EAAE,CACL,qBAAqB,EACrB,sBAAsB,EACtB,wBAAwB,EACxB,yBAAyB;IAAA,EAEhC;IACDC,mBAAmB,EAAEvD,mBAAmB;IACxCwD,oBAAoB,EAAExD,mBAAmB;IACzCyD,sBAAsB,EAAEzD,mBAAmB;IAC3C0D,uBAAuB,EAAE1D,mBAAmB;IAC5C2D,SAAS,EAAE1D;EACf,CAAC;EAEwB,IAAAmD,EAAA;EAAAQ,YAAA,CAAAR,EAAA;AAAA,EAAAS,IAAA,OAAAvD,MAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"36714163adc89db6d432eaa17b422511c8fcf7e5"}
