{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/imports/api/deviceLogs.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/api/deviceLogs.js","filename":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/imports/api/deviceLogs.js","inputSourceMap":{"version":3,"names":["Mongo","check","SHA256","DeviceLogs","Collection","generateAppId","deviceUUID","email","creationTime","combinedString","substring","Meteor","isServer","startup","createIndex","userId","appId","methods","deviceLogs.upsert","data","String","fcmToken","deviceInfo","Object","Date","toISOString","console","log","upsertAsync","$set","lastUpdated","$setOnInsert","createdAt","deviceLogs.updateToken","updateAsync","deviceLogs.getFCMTokenByAppId","deviceLog","findOneAsync","Error","deviceLogs.getFCMTokenByDeviceId","deviceLogs.getByAppId","result","publish","find"],"sources":["imports/api/deviceLogs.js"],"sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\nimport { SHA256 } from 'meteor/sha'; \n\nexport const DeviceLogs = new Mongo.Collection('deviceLogs');\n\n\n\n// Add generateAppId utility function\nconst generateAppId = (deviceUUID, email, creationTime) => {\n    const combinedString = `${deviceUUID}:${email}:${creationTime}`;\n    return SHA256(combinedString).substring(0, 32);\n  };\n  \n\n// Create indexes for better query performance\nif (Meteor.isServer) {\n  Meteor.startup(() => {\n    DeviceLogs.createIndex({ userId: 1 });\n    DeviceLogs.createIndex({ deviceUUID: 1 });\n    DeviceLogs.createIndex({ email: 1 });\n    DeviceLogs.createIndex({ appId: 1 });\n  });\n}\n\n// Define methods for DeviceLogs\nMeteor.methods({\n    'deviceLogs.upsert': async function(data) {\n        check(data, {\n          userId: String,\n          email: String,\n          deviceUUID: String,\n          fcmToken: String,\n          deviceInfo: Object,\n        });\n      \n        const creationTime = new Date().toISOString();\n        const appId = generateAppId(data.deviceUUID, data.email, creationTime);\n        console.log('Generated appId during upsert:', appId); // Add this log\n        \n        return DeviceLogs.upsertAsync(\n          {\n            userId: data.userId,\n            deviceUUID: data.deviceUUID,\n          },\n          {\n            $set: {\n              email: data.email,\n              fcmToken: data.fcmToken,\n              appId: appId,\n              lastUpdated: new Date(),\n            },\n            $setOnInsert: {\n              createdAt: new Date(),\n            },\n          }\n        );\n      },\n  'deviceLogs.updateToken'(userId, deviceUUID, fcmToken) {\n    check(userId, String);\n    check(deviceUUID, String);\n    check(fcmToken, String);\n\n    return DeviceLogs.updateAsync(\n      { \n        userId: userId,\n        deviceUUID: deviceUUID \n      },\n      {\n        $set: {\n          fcmToken: fcmToken,\n          lastUpdated: new Date()\n        }\n      }\n    );\n  },\n  'deviceLogs.getFCMTokenByAppId': async function(appId) {\n    check(appId, String);\n    \n    const deviceLog = await DeviceLogs.findOneAsync({ appId: appId });\n    \n    if (!deviceLog) {\n      throw new Meteor.Error('invalid-app-id', 'No device found with this App ID');\n    }\n    \n    return deviceLog.fcmToken;\n  },\n  'deviceLogs.getFCMTokenByDeviceId': async function(deviceUUID) {\n    check(deviceUUID, String);\n    \n    const deviceLog = await DeviceLogs.findOneAsync({ deviceUUID: deviceUUID });\n    \n    if (!deviceLog) {\n      throw new Meteor.Error('invalid-app-id', 'No device found with this Device ID');\n    }\n    \n    return deviceLog.fcmToken;\n  },\n  \n  // Also fix the debug method\n  'deviceLogs.getByAppId': async function(appId) {\n    check(appId, String);\n    const result = await DeviceLogs.findOneAsync({ appId });\n    console.log('Looking for appId:', appId);\n    console.log('Found device log:', result);\n    return result;\n  }\n});\n\n// Publish device logs\nif (Meteor.isServer) {\n  Meteor.publish('deviceLogs.byUser', function(userId) {\n    check(userId, String);\n    return DeviceLogs.find({ userId: userId });\n  });\n\n  Meteor.publish('deviceLogs.byDevice', function(deviceUUID) {\n    check(deviceUUID, String);\n    return DeviceLogs.find({ deviceUUID: deviceUUID });\n  });\n}"],"mappings":"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","ignoreList":[]},"targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth","root":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]}},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/imports/api/deviceLogs.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/api/deviceLogs.js","inputSourceMap":{"version":3,"names":["Mongo","check","SHA256","DeviceLogs","Collection","generateAppId","deviceUUID","email","creationTime","combinedString","substring","Meteor","isServer","startup","createIndex","userId","appId","methods","deviceLogs.upsert","data","String","fcmToken","deviceInfo","Object","Date","toISOString","console","log","upsertAsync","$set","lastUpdated","$setOnInsert","createdAt","deviceLogs.updateToken","updateAsync","deviceLogs.getFCMTokenByAppId","deviceLog","findOneAsync","Error","deviceLogs.getFCMTokenByDeviceId","deviceLogs.getByAppId","result","publish","find"],"sources":["imports/api/deviceLogs.js"],"sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\nimport { SHA256 } from 'meteor/sha'; \n\nexport const DeviceLogs = new Mongo.Collection('deviceLogs');\n\n\n\n// Add generateAppId utility function\nconst generateAppId = (deviceUUID, email, creationTime) => {\n    const combinedString = `${deviceUUID}:${email}:${creationTime}`;\n    return SHA256(combinedString).substring(0, 32);\n  };\n  \n\n// Create indexes for better query performance\nif (Meteor.isServer) {\n  Meteor.startup(() => {\n    DeviceLogs.createIndex({ userId: 1 });\n    DeviceLogs.createIndex({ deviceUUID: 1 });\n    DeviceLogs.createIndex({ email: 1 });\n    DeviceLogs.createIndex({ appId: 1 });\n  });\n}\n\n// Define methods for DeviceLogs\nMeteor.methods({\n    'deviceLogs.upsert': async function(data) {\n        check(data, {\n          userId: String,\n          email: String,\n          deviceUUID: String,\n          fcmToken: String,\n          deviceInfo: Object,\n        });\n      \n        const creationTime = new Date().toISOString();\n        const appId = generateAppId(data.deviceUUID, data.email, creationTime);\n        console.log('Generated appId during upsert:', appId); // Add this log\n        \n        return DeviceLogs.upsertAsync(\n          {\n            userId: data.userId,\n            deviceUUID: data.deviceUUID,\n          },\n          {\n            $set: {\n              email: data.email,\n              fcmToken: data.fcmToken,\n              appId: appId,\n              lastUpdated: new Date(),\n            },\n            $setOnInsert: {\n              createdAt: new Date(),\n            },\n          }\n        );\n      },\n  'deviceLogs.updateToken'(userId, deviceUUID, fcmToken) {\n    check(userId, String);\n    check(deviceUUID, String);\n    check(fcmToken, String);\n\n    return DeviceLogs.updateAsync(\n      { \n        userId: userId,\n        deviceUUID: deviceUUID \n      },\n      {\n        $set: {\n          fcmToken: fcmToken,\n          lastUpdated: new Date()\n        }\n      }\n    );\n  },\n  'deviceLogs.getFCMTokenByAppId': async function(appId) {\n    check(appId, String);\n    \n    const deviceLog = await DeviceLogs.findOneAsync({ appId: appId });\n    \n    if (!deviceLog) {\n      throw new Meteor.Error('invalid-app-id', 'No device found with this App ID');\n    }\n    \n    return deviceLog.fcmToken;\n  },\n  'deviceLogs.getFCMTokenByDeviceId': async function(deviceUUID) {\n    check(deviceUUID, String);\n    \n    const deviceLog = await DeviceLogs.findOneAsync({ deviceUUID: deviceUUID });\n    \n    if (!deviceLog) {\n      throw new Meteor.Error('invalid-app-id', 'No device found with this Device ID');\n    }\n    \n    return deviceLog.fcmToken;\n  },\n  \n  // Also fix the debug method\n  'deviceLogs.getByAppId': async function(appId) {\n    check(appId, String);\n    const result = await DeviceLogs.findOneAsync({ appId });\n    console.log('Looking for appId:', appId);\n    console.log('Found device log:', result);\n    return result;\n  }\n});\n\n// Publish device logs\nif (Meteor.isServer) {\n  Meteor.publish('deviceLogs.byUser', function(userId) {\n    check(userId, String);\n    return DeviceLogs.find({ userId: userId });\n  });\n\n  Meteor.publish('deviceLogs.byDevice', function(deviceUUID) {\n    check(deviceUUID, String);\n    return DeviceLogs.find({ deviceUUID: deviceUUID });\n  });\n}"],"mappings":"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","ignoreList":[]}}},"code":"!function (module1) {\n  var _regeneratorRuntime;\n  module1.link(\"@babel/runtime/regenerator\", {\n    default: function (v) {\n      _regeneratorRuntime = v;\n    }\n  }, 0);\n  module1.export({\n    DeviceLogs: function () {\n      return DeviceLogs;\n    }\n  });\n  var Mongo;\n  module1.link(\"meteor/mongo\", {\n    Mongo: function (v) {\n      Mongo = v;\n    }\n  }, 0);\n  var check;\n  module1.link(\"meteor/check\", {\n    check: function (v) {\n      check = v;\n    }\n  }, 1);\n  var SHA256;\n  module1.link(\"meteor/sha\", {\n    SHA256: function (v) {\n      SHA256 = v;\n    }\n  }, 2);\n  ___INIT_METEOR_FAST_REFRESH(module);\n  var DeviceLogs = new Mongo.Collection('deviceLogs');\n  // Add generateAppId utility function\n  var generateAppId = function (deviceUUID, email, creationTime) {\n    var combinedString = deviceUUID + \":\" + email + \":\" + creationTime;\n    return SHA256(combinedString).substring(0, 32);\n  };\n\n  // Create indexes for better query performance\n  if (Meteor.isServer) {\n    Meteor.startup(function () {\n      DeviceLogs.createIndex({\n        userId: 1\n      });\n      DeviceLogs.createIndex({\n        deviceUUID: 1\n      });\n      DeviceLogs.createIndex({\n        email: 1\n      });\n      DeviceLogs.createIndex({\n        appId: 1\n      });\n    });\n  }\n\n  // Define methods for DeviceLogs\n  Meteor.methods({\n    'deviceLogs.upsert': function () {\n      function _callee(data) {\n        var creationTime, appId;\n        return _regeneratorRuntime.async(function () {\n          function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                check(data, {\n                  userId: String,\n                  email: String,\n                  deviceUUID: String,\n                  fcmToken: String,\n                  deviceInfo: Object\n                });\n                creationTime = new Date().toISOString();\n                appId = generateAppId(data.deviceUUID, data.email, creationTime);\n                console.log('Generated appId during upsert:', appId); // Add this log\n                return _context.abrupt(\"return\", DeviceLogs.upsertAsync({\n                  userId: data.userId,\n                  deviceUUID: data.deviceUUID\n                }, {\n                  $set: {\n                    email: data.email,\n                    fcmToken: data.fcmToken,\n                    appId: appId,\n                    lastUpdated: new Date()\n                  },\n                  $setOnInsert: {\n                    createdAt: new Date()\n                  }\n                }));\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n          return _callee$;\n        }(), null, null, null, Promise);\n      }\n      return _callee;\n    }(),\n    'deviceLogs.updateToken': function (userId, deviceUUID, fcmToken) {\n      check(userId, String);\n      check(deviceUUID, String);\n      check(fcmToken, String);\n      return DeviceLogs.updateAsync({\n        userId: userId,\n        deviceUUID: deviceUUID\n      }, {\n        $set: {\n          fcmToken: fcmToken,\n          lastUpdated: new Date()\n        }\n      });\n    },\n    'deviceLogs.getFCMTokenByAppId': function () {\n      function _callee2(appId) {\n        var deviceLog;\n        return _regeneratorRuntime.async(function () {\n          function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                check(appId, String);\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(DeviceLogs.findOneAsync({\n                  appId: appId\n                }));\n              case 3:\n                deviceLog = _context2.sent;\n                if (deviceLog) {\n                  _context2.next = 6;\n                  break;\n                }\n                throw new Meteor.Error('invalid-app-id', 'No device found with this App ID');\n              case 6:\n                return _context2.abrupt(\"return\", deviceLog.fcmToken);\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n          return _callee2$;\n        }(), null, null, null, Promise);\n      }\n      return _callee2;\n    }(),\n    'deviceLogs.getFCMTokenByDeviceId': function () {\n      function _callee3(deviceUUID) {\n        var deviceLog;\n        return _regeneratorRuntime.async(function () {\n          function _callee3$(_context3) {\n            while (1) switch (_context3.prev = _context3.next) {\n              case 0:\n                check(deviceUUID, String);\n                _context3.next = 3;\n                return _regeneratorRuntime.awrap(DeviceLogs.findOneAsync({\n                  deviceUUID: deviceUUID\n                }));\n              case 3:\n                deviceLog = _context3.sent;\n                if (deviceLog) {\n                  _context3.next = 6;\n                  break;\n                }\n                throw new Meteor.Error('invalid-app-id', 'No device found with this Device ID');\n              case 6:\n                return _context3.abrupt(\"return\", deviceLog.fcmToken);\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n          return _callee3$;\n        }(), null, null, null, Promise);\n      }\n      return _callee3;\n    }(),\n    // Also fix the debug method\n    'deviceLogs.getByAppId': function () {\n      function _callee4(appId) {\n        var result;\n        return _regeneratorRuntime.async(function () {\n          function _callee4$(_context4) {\n            while (1) switch (_context4.prev = _context4.next) {\n              case 0:\n                check(appId, String);\n                _context4.next = 3;\n                return _regeneratorRuntime.awrap(DeviceLogs.findOneAsync({\n                  appId: appId\n                }));\n              case 3:\n                result = _context4.sent;\n                console.log('Looking for appId:', appId);\n                console.log('Found device log:', result);\n                return _context4.abrupt(\"return\", result);\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n          return _callee4$;\n        }(), null, null, null, Promise);\n      }\n      return _callee4;\n    }()\n  });\n\n  // Publish device logs\n  if (Meteor.isServer) {\n    Meteor.publish('deviceLogs.byUser', function (userId) {\n      check(userId, String);\n      return DeviceLogs.find({\n        userId: userId\n      });\n    });\n    Meteor.publish('deviceLogs.byDevice', function (deviceUUID) {\n      check(deviceUUID, String);\n      return DeviceLogs.find({\n        deviceUUID: deviceUUID\n      });\n    });\n  }\n}.call(this, module);","map":{"version":3,"names":["DeviceLogs","Mongo","Collection","generateAppId","deviceUUID","email","creationTime","combinedString","SHA256","substring","Meteor","isServer","startup","createIndex","userId","appId","methods","_callee","data","_regeneratorRuntime","async","_callee$","_context","prev","next","check","String","fcmToken","deviceInfo","Object","Date","toISOString","console","log","abrupt","upsertAsync","$set","lastUpdated","$setOnInsert","createdAt","stop","Promise","deviceLogs.updateToken","updateAsync","_callee2","deviceLog","_callee2$","_context2","awrap","findOneAsync","sent","Error","_callee3","_callee3$","_context3","_callee4","result","_callee4$","_context4","publish","find","call","module"],"sources":["imports/api/deviceLogs.js"],"sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\nimport { SHA256 } from 'meteor/sha'; \n\nexport const DeviceLogs = new Mongo.Collection('deviceLogs');\n\n\n\n// Add generateAppId utility function\nconst generateAppId = (deviceUUID, email, creationTime) => {\n    const combinedString = `${deviceUUID}:${email}:${creationTime}`;\n    return SHA256(combinedString).substring(0, 32);\n  };\n  \n\n// Create indexes for better query performance\nif (Meteor.isServer) {\n  Meteor.startup(() => {\n    DeviceLogs.createIndex({ userId: 1 });\n    DeviceLogs.createIndex({ deviceUUID: 1 });\n    DeviceLogs.createIndex({ email: 1 });\n    DeviceLogs.createIndex({ appId: 1 });\n  });\n}\n\n// Define methods for DeviceLogs\nMeteor.methods({\n    'deviceLogs.upsert': async function(data) {\n        check(data, {\n          userId: String,\n          email: String,\n          deviceUUID: String,\n          fcmToken: String,\n          deviceInfo: Object,\n        });\n      \n        const creationTime = new Date().toISOString();\n        const appId = generateAppId(data.deviceUUID, data.email, creationTime);\n        console.log('Generated appId during upsert:', appId); // Add this log\n        \n        return DeviceLogs.upsertAsync(\n          {\n            userId: data.userId,\n            deviceUUID: data.deviceUUID,\n          },\n          {\n            $set: {\n              email: data.email,\n              fcmToken: data.fcmToken,\n              appId: appId,\n              lastUpdated: new Date(),\n            },\n            $setOnInsert: {\n              createdAt: new Date(),\n            },\n          }\n        );\n      },\n  'deviceLogs.updateToken'(userId, deviceUUID, fcmToken) {\n    check(userId, String);\n    check(deviceUUID, String);\n    check(fcmToken, String);\n\n    return DeviceLogs.updateAsync(\n      { \n        userId: userId,\n        deviceUUID: deviceUUID \n      },\n      {\n        $set: {\n          fcmToken: fcmToken,\n          lastUpdated: new Date()\n        }\n      }\n    );\n  },\n  'deviceLogs.getFCMTokenByAppId': async function(appId) {\n    check(appId, String);\n    \n    const deviceLog = await DeviceLogs.findOneAsync({ appId: appId });\n    \n    if (!deviceLog) {\n      throw new Meteor.Error('invalid-app-id', 'No device found with this App ID');\n    }\n    \n    return deviceLog.fcmToken;\n  },\n  'deviceLogs.getFCMTokenByDeviceId': async function(deviceUUID) {\n    check(deviceUUID, String);\n    \n    const deviceLog = await DeviceLogs.findOneAsync({ deviceUUID: deviceUUID });\n    \n    if (!deviceLog) {\n      throw new Meteor.Error('invalid-app-id', 'No device found with this Device ID');\n    }\n    \n    return deviceLog.fcmToken;\n  },\n  \n  // Also fix the debug method\n  'deviceLogs.getByAppId': async function(appId) {\n    check(appId, String);\n    const result = await DeviceLogs.findOneAsync({ appId });\n    console.log('Looking for appId:', appId);\n    console.log('Found device log:', result);\n    return result;\n  }\n});\n\n// Publish device logs\nif (Meteor.isServer) {\n  Meteor.publish('deviceLogs.byUser', function(userId) {\n    check(userId, String);\n    return DeviceLogs.find({ userId: userId });\n  });\n\n  Meteor.publish('deviceLogs.byDevice', function(deviceUUID) {\n    check(deviceUUID, String);\n    return DeviceLogs.find({ deviceUUID: deviceUUID });\n  });\n}"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"daff070399dcdf421e3ea8e0fcf2c3a0f4ccfb87"}
