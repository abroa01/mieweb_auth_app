{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/node_modules/motion-dom/dist/es/view/start.mjs","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"node_modules/motion-dom/dist/es/view/start.mjs","filename":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/node_modules/motion-dom/dist/es/view/start.mjs","inputSourceMap":{"version":3,"names":["secondsToMilliseconds","BaseGroupPlaybackControls","getValueTransition","NativeAnimationControls","PseudoAnimation","applyGeneratorOptions","mapEasingToNativeEasing","chooseLayerType","css","getLayerName","getViewAnimations","hasTarget","definitionNames","startViewAnimation","update","defaultOptions","targets","document","startViewTransition","Promise","resolve","set","commit","transition","finished","finally","remove","ready","then","_a","generatedViewAnimations","animations","forEach","definition","target","key","keyframes","options","valueName","valueKeyframes","Object","entries","valueOptions","type","Array","isArray","initialValue","delay","animation","documentElement","push","playState","effect","KeyframeEffect","pseudoElement","name","targetDefinition","get","layer","transitionName","animationTransition","easing","ease","duration","updateTiming","hasOpacity","getKeyframes","some","keyframe","mixBlendMode","cancel","opacity"],"sources":["node_modules/motion-dom/dist/es/view/start.mjs"],"sourcesContent":["import { secondsToMilliseconds } from 'motion-utils';\nimport { BaseGroupPlaybackControls } from '../animation/controls/BaseGroup.mjs';\nimport { getValueTransition } from '../animation/utils/get-value-transition.mjs';\nimport { NativeAnimationControls } from '../animation/waapi/NativeAnimationControls.mjs';\nimport { PseudoAnimation } from '../animation/waapi/PseudoAnimation.mjs';\nimport { applyGeneratorOptions } from '../animation/waapi/utils/convert-options.mjs';\nimport { mapEasingToNativeEasing } from '../animation/waapi/utils/easing.mjs';\nimport { chooseLayerType } from './utils/choose-layer-type.mjs';\nimport { css } from './utils/css.mjs';\nimport { getLayerName } from './utils/get-layer-name.mjs';\nimport { getViewAnimations } from './utils/get-view-animations.mjs';\nimport { hasTarget } from './utils/has-target.mjs';\n\nconst definitionNames = [\"layout\", \"enter\", \"exit\", \"new\", \"old\"];\nfunction startViewAnimation(update, defaultOptions, targets) {\n    if (!document.startViewTransition) {\n        return new Promise(async (resolve) => {\n            await update();\n            resolve(new BaseGroupPlaybackControls([]));\n        });\n    }\n    // TODO: Go over existing targets and ensure they all have ids\n    /**\n     * If we don't have any animations defined for the root target,\n     * remove it from being captured.\n     */\n    if (!hasTarget(\"root\", targets)) {\n        css.set(\":root\", {\n            \"view-transition-name\": \"none\",\n        });\n    }\n    /**\n     * Set the timing curve to linear for all view transition layers.\n     * This gets baked into the keyframes, which can't be changed\n     * without breaking the generated animation.\n     *\n     * This allows us to set easing via updateTiming - which can be changed.\n     */\n    css.set(\"::view-transition-group(*), ::view-transition-old(*), ::view-transition-new(*)\", { \"animation-timing-function\": \"linear !important\" });\n    css.commit(); // Write\n    const transition = document.startViewTransition(async () => {\n        await update();\n        // TODO: Go over new targets and ensure they all have ids\n    });\n    transition.finished.finally(() => {\n        css.remove(); // Write\n    });\n    return new Promise((resolve) => {\n        transition.ready.then(() => {\n            var _a;\n            const generatedViewAnimations = getViewAnimations();\n            const animations = [];\n            /**\n             * Create animations for our definitions\n             */\n            targets.forEach((definition, target) => {\n                // TODO: If target is not \"root\", resolve elements\n                // and iterate over each\n                for (const key of definitionNames) {\n                    if (!definition[key])\n                        continue;\n                    const { keyframes, options } = definition[key];\n                    for (let [valueName, valueKeyframes] of Object.entries(keyframes)) {\n                        if (!valueKeyframes)\n                            continue;\n                        const valueOptions = {\n                            ...getValueTransition(defaultOptions, valueName),\n                            ...getValueTransition(options, valueName),\n                        };\n                        const type = chooseLayerType(key);\n                        /**\n                         * If this is an opacity animation, and keyframes are not an array,\n                         * we need to convert them into an array and set an initial value.\n                         */\n                        if (valueName === \"opacity\" &&\n                            !Array.isArray(valueKeyframes)) {\n                            const initialValue = type === \"new\" ? 0 : 1;\n                            valueKeyframes = [initialValue, valueKeyframes];\n                        }\n                        /**\n                         * Resolve stagger function if provided.\n                         */\n                        if (typeof valueOptions.delay === \"function\") {\n                            valueOptions.delay = valueOptions.delay(0, 1);\n                        }\n                        const animation = new PseudoAnimation(document.documentElement, `::view-transition-${type}(${target})`, valueName, valueKeyframes, valueOptions);\n                        animations.push(animation);\n                    }\n                }\n            });\n            /**\n             * Handle browser generated animations\n             */\n            for (const animation of generatedViewAnimations) {\n                if (animation.playState === \"finished\")\n                    continue;\n                const { effect } = animation;\n                if (!effect || !(effect instanceof KeyframeEffect))\n                    continue;\n                const { pseudoElement } = effect;\n                if (!pseudoElement)\n                    continue;\n                const name = getLayerName(pseudoElement);\n                if (!name)\n                    continue;\n                const targetDefinition = targets.get(name.layer);\n                if (!targetDefinition) {\n                    /**\n                     * If transition name is group then update the timing of the animation\n                     * whereas if it's old or new then we could possibly replace it using\n                     * the above method.\n                     */\n                    const transitionName = name.type === \"group\" ? \"layout\" : \"\";\n                    const animationTransition = {\n                        ...getValueTransition(defaultOptions, transitionName),\n                    };\n                    applyGeneratorOptions(animationTransition);\n                    const easing = mapEasingToNativeEasing(animationTransition.ease, animationTransition.duration);\n                    effect.updateTiming({\n                        delay: secondsToMilliseconds((_a = animationTransition.delay) !== null && _a !== void 0 ? _a : 0),\n                        duration: animationTransition.duration,\n                        easing,\n                    });\n                    animations.push(new NativeAnimationControls(animation));\n                }\n                else if (hasOpacity(targetDefinition, \"enter\") &&\n                    hasOpacity(targetDefinition, \"exit\") &&\n                    effect\n                        .getKeyframes()\n                        .some((keyframe) => keyframe.mixBlendMode)) {\n                    animations.push(new NativeAnimationControls(animation));\n                }\n                else {\n                    animation.cancel();\n                }\n            }\n            resolve(new BaseGroupPlaybackControls(animations));\n        });\n    });\n}\nfunction hasOpacity(target, key) {\n    var _a;\n    return (_a = target === null || target === void 0 ? void 0 : target[key]) === null || _a === void 0 ? void 0 : _a.keyframes.opacity;\n}\n\nexport { startViewAnimation };\n"],"mappings":";AAAA,SAASA,qBAAqB,QAAQ,cAAc;AACpD,SAASC,yBAAyB,QAAQ,qCAAqC;AAC/E,SAASC,kBAAkB,QAAQ,6CAA6C;AAChF,SAASC,uBAAuB,QAAQ,gDAAgD;AACxF,SAASC,eAAe,QAAQ,wCAAwC;AACxE,SAASC,qBAAqB,QAAQ,8CAA8C;AACpF,SAASC,uBAAuB,QAAQ,qCAAqC;AAC7E,SAASC,eAAe,QAAQ,+BAA+B;AAC/D,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,YAAY,QAAQ,4BAA4B;AACzD,SAASC,iBAAiB,QAAQ,iCAAiC;AACnE,SAASC,SAAS,QAAQ,wBAAwB;AAElD,MAAMC,eAAe,GAAG,CAAC,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC;AACjE,SAASC,kBAAkBA,CAACC,MAAM,EAAEC,cAAc,EAAEC,OAAO,EAAE;EACzD,IAAI,CAACC,QAAQ,CAACC,mBAAmB,EAAE;IAC/B,OAAO,IAAIC,OAAO,CAAC,MAAOC,OAAO,IAAK;MAClC,MAAMN,MAAM,CAAC,CAAC;MACdM,OAAO,CAAC,IAAInB,yBAAyB,CAAC,EAAE,CAAC,CAAC;IAC9C,CAAC,CAAC;EACN;EACA;EACA;AACJ;AACA;AACA;EACI,IAAI,CAACU,SAAS,CAAC,MAAM,EAAEK,OAAO,CAAC,EAAE;IAC7BR,GAAG,CAACa,GAAG,CAAC,OAAO,EAAE;MACb,sBAAsB,EAAE;IAC5B,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIb,GAAG,CAACa,GAAG,CAAC,gFAAgF,EAAE;IAAE,2BAA2B,EAAE;EAAoB,CAAC,CAAC;EAC/Ib,GAAG,CAACc,MAAM,CAAC,CAAC,CAAC,CAAC;EACd,MAAMC,UAAU,GAAGN,QAAQ,CAACC,mBAAmB,CAAC,YAAY;IACxD,MAAMJ,MAAM,CAAC,CAAC;IACd;EACJ,CAAC,CAAC;EACFS,UAAU,CAACC,QAAQ,CAACC,OAAO,CAAC,MAAM;IAC9BjB,GAAG,CAACkB,MAAM,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC;EACF,OAAO,IAAIP,OAAO,CAAEC,OAAO,IAAK;IAC5BG,UAAU,CAACI,KAAK,CAACC,IAAI,CAAC,MAAM;MACxB,IAAIC,EAAE;MACN,MAAMC,uBAAuB,GAAGpB,iBAAiB,CAAC,CAAC;MACnD,MAAMqB,UAAU,GAAG,EAAE;MACrB;AACZ;AACA;MACYf,OAAO,CAACgB,OAAO,CAAC,CAACC,UAAU,EAAEC,MAAM,KAAK;QACpC;QACA;QACA,KAAK,MAAMC,GAAG,IAAIvB,eAAe,EAAE;UAC/B,IAAI,CAACqB,UAAU,CAACE,GAAG,CAAC,EAChB;UACJ,MAAM;YAAEC,SAAS;YAAEC;UAAQ,CAAC,GAAGJ,UAAU,CAACE,GAAG,CAAC;UAC9C,KAAK,IAAI,CAACG,SAAS,EAAEC,cAAc,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACL,SAAS,CAAC,EAAE;YAC/D,IAAI,CAACG,cAAc,EACf;YACJ,MAAMG,YAAY,GAAG;cACjB,GAAGxC,kBAAkB,CAACa,cAAc,EAAEuB,SAAS,CAAC;cAChD,GAAGpC,kBAAkB,CAACmC,OAAO,EAAEC,SAAS;YAC5C,CAAC;YACD,MAAMK,IAAI,GAAGpC,eAAe,CAAC4B,GAAG,CAAC;YACjC;AACxB;AACA;AACA;YACwB,IAAIG,SAAS,KAAK,SAAS,IACvB,CAACM,KAAK,CAACC,OAAO,CAACN,cAAc,CAAC,EAAE;cAChC,MAAMO,YAAY,GAAGH,IAAI,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC;cAC3CJ,cAAc,GAAG,CAACO,YAAY,EAAEP,cAAc,CAAC;YACnD;YACA;AACxB;AACA;YACwB,IAAI,OAAOG,YAAY,CAACK,KAAK,KAAK,UAAU,EAAE;cAC1CL,YAAY,CAACK,KAAK,GAAGL,YAAY,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;YACjD;YACA,MAAMC,SAAS,GAAG,IAAI5C,eAAe,CAACa,QAAQ,CAACgC,eAAe,EAAE,qBAAqBN,IAAI,IAAIT,MAAM,GAAG,EAAEI,SAAS,EAAEC,cAAc,EAAEG,YAAY,CAAC;YAChJX,UAAU,CAACmB,IAAI,CAACF,SAAS,CAAC;UAC9B;QACJ;MACJ,CAAC,CAAC;MACF;AACZ;AACA;MACY,KAAK,MAAMA,SAAS,IAAIlB,uBAAuB,EAAE;QAC7C,IAAIkB,SAAS,CAACG,SAAS,KAAK,UAAU,EAClC;QACJ,MAAM;UAAEC;QAAO,CAAC,GAAGJ,SAAS;QAC5B,IAAI,CAACI,MAAM,IAAI,EAAEA,MAAM,YAAYC,cAAc,CAAC,EAC9C;QACJ,MAAM;UAAEC;QAAc,CAAC,GAAGF,MAAM;QAChC,IAAI,CAACE,aAAa,EACd;QACJ,MAAMC,IAAI,GAAG9C,YAAY,CAAC6C,aAAa,CAAC;QACxC,IAAI,CAACC,IAAI,EACL;QACJ,MAAMC,gBAAgB,GAAGxC,OAAO,CAACyC,GAAG,CAACF,IAAI,CAACG,KAAK,CAAC;QAChD,IAAI,CAACF,gBAAgB,EAAE;UACnB;AACpB;AACA;AACA;AACA;UACoB,MAAMG,cAAc,GAAGJ,IAAI,CAACZ,IAAI,KAAK,OAAO,GAAG,QAAQ,GAAG,EAAE;UAC5D,MAAMiB,mBAAmB,GAAG;YACxB,GAAG1D,kBAAkB,CAACa,cAAc,EAAE4C,cAAc;UACxD,CAAC;UACDtD,qBAAqB,CAACuD,mBAAmB,CAAC;UAC1C,MAAMC,MAAM,GAAGvD,uBAAuB,CAACsD,mBAAmB,CAACE,IAAI,EAAEF,mBAAmB,CAACG,QAAQ,CAAC;UAC9FX,MAAM,CAACY,YAAY,CAAC;YAChBjB,KAAK,EAAE/C,qBAAqB,CAAC,CAAC6B,EAAE,GAAG+B,mBAAmB,CAACb,KAAK,MAAM,IAAI,IAAIlB,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC,CAAC;YACjGkC,QAAQ,EAAEH,mBAAmB,CAACG,QAAQ;YACtCF;UACJ,CAAC,CAAC;UACF9B,UAAU,CAACmB,IAAI,CAAC,IAAI/C,uBAAuB,CAAC6C,SAAS,CAAC,CAAC;QAC3D,CAAC,MACI,IAAIiB,UAAU,CAACT,gBAAgB,EAAE,OAAO,CAAC,IAC1CS,UAAU,CAACT,gBAAgB,EAAE,MAAM,CAAC,IACpCJ,MAAM,CACDc,YAAY,CAAC,CAAC,CACdC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,YAAY,CAAC,EAAE;UAChDtC,UAAU,CAACmB,IAAI,CAAC,IAAI/C,uBAAuB,CAAC6C,SAAS,CAAC,CAAC;QAC3D,CAAC,MACI;UACDA,SAAS,CAACsB,MAAM,CAAC,CAAC;QACtB;MACJ;MACAlD,OAAO,CAAC,IAAInB,yBAAyB,CAAC8B,UAAU,CAAC,CAAC;IACtD,CAAC,CAAC;EACN,CAAC,CAAC;AACN;AACA,SAASkC,UAAUA,CAAC/B,MAAM,EAAEC,GAAG,EAAE;EAC7B,IAAIN,EAAE;EACN,OAAO,CAACA,EAAE,GAAGK,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACC,GAAG,CAAC,MAAM,IAAI,IAAIN,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACO,SAAS,CAACmC,OAAO;AACvI;AAEA,SAAS1D,kBAAkB","ignoreList":[]},"targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth","root":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/node_modules/motion-dom/dist/es/view/start.mjs","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"node_modules/motion-dom/dist/es/view/start.mjs","inputSourceMap":{"version":3,"names":["secondsToMilliseconds","BaseGroupPlaybackControls","getValueTransition","NativeAnimationControls","PseudoAnimation","applyGeneratorOptions","mapEasingToNativeEasing","chooseLayerType","css","getLayerName","getViewAnimations","hasTarget","definitionNames","startViewAnimation","update","defaultOptions","targets","document","startViewTransition","Promise","resolve","set","commit","transition","finished","finally","remove","ready","then","_a","generatedViewAnimations","animations","forEach","definition","target","key","keyframes","options","valueName","valueKeyframes","Object","entries","valueOptions","type","Array","isArray","initialValue","delay","animation","documentElement","push","playState","effect","KeyframeEffect","pseudoElement","name","targetDefinition","get","layer","transitionName","animationTransition","easing","ease","duration","updateTiming","hasOpacity","getKeyframes","some","keyframe","mixBlendMode","cancel","opacity"],"sources":["node_modules/motion-dom/dist/es/view/start.mjs"],"sourcesContent":["import { secondsToMilliseconds } from 'motion-utils';\nimport { BaseGroupPlaybackControls } from '../animation/controls/BaseGroup.mjs';\nimport { getValueTransition } from '../animation/utils/get-value-transition.mjs';\nimport { NativeAnimationControls } from '../animation/waapi/NativeAnimationControls.mjs';\nimport { PseudoAnimation } from '../animation/waapi/PseudoAnimation.mjs';\nimport { applyGeneratorOptions } from '../animation/waapi/utils/convert-options.mjs';\nimport { mapEasingToNativeEasing } from '../animation/waapi/utils/easing.mjs';\nimport { chooseLayerType } from './utils/choose-layer-type.mjs';\nimport { css } from './utils/css.mjs';\nimport { getLayerName } from './utils/get-layer-name.mjs';\nimport { getViewAnimations } from './utils/get-view-animations.mjs';\nimport { hasTarget } from './utils/has-target.mjs';\n\nconst definitionNames = [\"layout\", \"enter\", \"exit\", \"new\", \"old\"];\nfunction startViewAnimation(update, defaultOptions, targets) {\n    if (!document.startViewTransition) {\n        return new Promise(async (resolve) => {\n            await update();\n            resolve(new BaseGroupPlaybackControls([]));\n        });\n    }\n    // TODO: Go over existing targets and ensure they all have ids\n    /**\n     * If we don't have any animations defined for the root target,\n     * remove it from being captured.\n     */\n    if (!hasTarget(\"root\", targets)) {\n        css.set(\":root\", {\n            \"view-transition-name\": \"none\",\n        });\n    }\n    /**\n     * Set the timing curve to linear for all view transition layers.\n     * This gets baked into the keyframes, which can't be changed\n     * without breaking the generated animation.\n     *\n     * This allows us to set easing via updateTiming - which can be changed.\n     */\n    css.set(\"::view-transition-group(*), ::view-transition-old(*), ::view-transition-new(*)\", { \"animation-timing-function\": \"linear !important\" });\n    css.commit(); // Write\n    const transition = document.startViewTransition(async () => {\n        await update();\n        // TODO: Go over new targets and ensure they all have ids\n    });\n    transition.finished.finally(() => {\n        css.remove(); // Write\n    });\n    return new Promise((resolve) => {\n        transition.ready.then(() => {\n            var _a;\n            const generatedViewAnimations = getViewAnimations();\n            const animations = [];\n            /**\n             * Create animations for our definitions\n             */\n            targets.forEach((definition, target) => {\n                // TODO: If target is not \"root\", resolve elements\n                // and iterate over each\n                for (const key of definitionNames) {\n                    if (!definition[key])\n                        continue;\n                    const { keyframes, options } = definition[key];\n                    for (let [valueName, valueKeyframes] of Object.entries(keyframes)) {\n                        if (!valueKeyframes)\n                            continue;\n                        const valueOptions = {\n                            ...getValueTransition(defaultOptions, valueName),\n                            ...getValueTransition(options, valueName),\n                        };\n                        const type = chooseLayerType(key);\n                        /**\n                         * If this is an opacity animation, and keyframes are not an array,\n                         * we need to convert them into an array and set an initial value.\n                         */\n                        if (valueName === \"opacity\" &&\n                            !Array.isArray(valueKeyframes)) {\n                            const initialValue = type === \"new\" ? 0 : 1;\n                            valueKeyframes = [initialValue, valueKeyframes];\n                        }\n                        /**\n                         * Resolve stagger function if provided.\n                         */\n                        if (typeof valueOptions.delay === \"function\") {\n                            valueOptions.delay = valueOptions.delay(0, 1);\n                        }\n                        const animation = new PseudoAnimation(document.documentElement, `::view-transition-${type}(${target})`, valueName, valueKeyframes, valueOptions);\n                        animations.push(animation);\n                    }\n                }\n            });\n            /**\n             * Handle browser generated animations\n             */\n            for (const animation of generatedViewAnimations) {\n                if (animation.playState === \"finished\")\n                    continue;\n                const { effect } = animation;\n                if (!effect || !(effect instanceof KeyframeEffect))\n                    continue;\n                const { pseudoElement } = effect;\n                if (!pseudoElement)\n                    continue;\n                const name = getLayerName(pseudoElement);\n                if (!name)\n                    continue;\n                const targetDefinition = targets.get(name.layer);\n                if (!targetDefinition) {\n                    /**\n                     * If transition name is group then update the timing of the animation\n                     * whereas if it's old or new then we could possibly replace it using\n                     * the above method.\n                     */\n                    const transitionName = name.type === \"group\" ? \"layout\" : \"\";\n                    const animationTransition = {\n                        ...getValueTransition(defaultOptions, transitionName),\n                    };\n                    applyGeneratorOptions(animationTransition);\n                    const easing = mapEasingToNativeEasing(animationTransition.ease, animationTransition.duration);\n                    effect.updateTiming({\n                        delay: secondsToMilliseconds((_a = animationTransition.delay) !== null && _a !== void 0 ? _a : 0),\n                        duration: animationTransition.duration,\n                        easing,\n                    });\n                    animations.push(new NativeAnimationControls(animation));\n                }\n                else if (hasOpacity(targetDefinition, \"enter\") &&\n                    hasOpacity(targetDefinition, \"exit\") &&\n                    effect\n                        .getKeyframes()\n                        .some((keyframe) => keyframe.mixBlendMode)) {\n                    animations.push(new NativeAnimationControls(animation));\n                }\n                else {\n                    animation.cancel();\n                }\n            }\n            resolve(new BaseGroupPlaybackControls(animations));\n        });\n    });\n}\nfunction hasOpacity(target, key) {\n    var _a;\n    return (_a = target === null || target === void 0 ? void 0 : target[key]) === null || _a === void 0 ? void 0 : _a.keyframes.opacity;\n}\n\nexport { startViewAnimation };\n"],"mappings":"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","ignoreList":[]}}},"code":"!function (module1) {\n  let _objectSpread;\n  module1.link(\"@babel/runtime/helpers/objectSpread2\", {\n    default(v) {\n      _objectSpread = v;\n    }\n  }, 0);\n  module1.export({\n    startViewAnimation: () => startViewAnimation\n  });\n  let secondsToMilliseconds;\n  module1.link(\"motion-utils\", {\n    secondsToMilliseconds(v) {\n      secondsToMilliseconds = v;\n    }\n  }, 0);\n  let BaseGroupPlaybackControls;\n  module1.link(\"../animation/controls/BaseGroup.mjs\", {\n    BaseGroupPlaybackControls(v) {\n      BaseGroupPlaybackControls = v;\n    }\n  }, 1);\n  let getValueTransition;\n  module1.link(\"../animation/utils/get-value-transition.mjs\", {\n    getValueTransition(v) {\n      getValueTransition = v;\n    }\n  }, 2);\n  let NativeAnimationControls;\n  module1.link(\"../animation/waapi/NativeAnimationControls.mjs\", {\n    NativeAnimationControls(v) {\n      NativeAnimationControls = v;\n    }\n  }, 3);\n  let PseudoAnimation;\n  module1.link(\"../animation/waapi/PseudoAnimation.mjs\", {\n    PseudoAnimation(v) {\n      PseudoAnimation = v;\n    }\n  }, 4);\n  let applyGeneratorOptions;\n  module1.link(\"../animation/waapi/utils/convert-options.mjs\", {\n    applyGeneratorOptions(v) {\n      applyGeneratorOptions = v;\n    }\n  }, 5);\n  let mapEasingToNativeEasing;\n  module1.link(\"../animation/waapi/utils/easing.mjs\", {\n    mapEasingToNativeEasing(v) {\n      mapEasingToNativeEasing = v;\n    }\n  }, 6);\n  let chooseLayerType;\n  module1.link(\"./utils/choose-layer-type.mjs\", {\n    chooseLayerType(v) {\n      chooseLayerType = v;\n    }\n  }, 7);\n  let css;\n  module1.link(\"./utils/css.mjs\", {\n    css(v) {\n      css = v;\n    }\n  }, 8);\n  let getLayerName;\n  module1.link(\"./utils/get-layer-name.mjs\", {\n    getLayerName(v) {\n      getLayerName = v;\n    }\n  }, 9);\n  let getViewAnimations;\n  module1.link(\"./utils/get-view-animations.mjs\", {\n    getViewAnimations(v) {\n      getViewAnimations = v;\n    }\n  }, 10);\n  let hasTarget;\n  module1.link(\"./utils/has-target.mjs\", {\n    hasTarget(v) {\n      hasTarget = v;\n    }\n  }, 11);\n  ___INIT_METEOR_FAST_REFRESH(module);\n  const definitionNames = [\"layout\", \"enter\", \"exit\", \"new\", \"old\"];\n  function startViewAnimation(update, defaultOptions, targets) {\n    if (!document.startViewTransition) {\n      return new Promise(async resolve => {\n        await update();\n        resolve(new BaseGroupPlaybackControls([]));\n      });\n    }\n    // TODO: Go over existing targets and ensure they all have ids\n    /**\n     * If we don't have any animations defined for the root target,\n     * remove it from being captured.\n     */\n    if (!hasTarget(\"root\", targets)) {\n      css.set(\":root\", {\n        \"view-transition-name\": \"none\"\n      });\n    }\n    /**\n     * Set the timing curve to linear for all view transition layers.\n     * This gets baked into the keyframes, which can't be changed\n     * without breaking the generated animation.\n     *\n     * This allows us to set easing via updateTiming - which can be changed.\n     */\n    css.set(\"::view-transition-group(*), ::view-transition-old(*), ::view-transition-new(*)\", {\n      \"animation-timing-function\": \"linear !important\"\n    });\n    css.commit(); // Write\n    const transition = document.startViewTransition(async () => {\n      await update();\n      // TODO: Go over new targets and ensure they all have ids\n    });\n    transition.finished.finally(() => {\n      css.remove(); // Write\n    });\n    return new Promise(resolve => {\n      transition.ready.then(() => {\n        var _a;\n        const generatedViewAnimations = getViewAnimations();\n        const animations = [];\n        /**\n         * Create animations for our definitions\n         */\n        targets.forEach((definition, target) => {\n          // TODO: If target is not \"root\", resolve elements\n          // and iterate over each\n          for (const key of definitionNames) {\n            if (!definition[key]) continue;\n            const {\n              keyframes,\n              options\n            } = definition[key];\n            for (let [valueName, valueKeyframes] of Object.entries(keyframes)) {\n              if (!valueKeyframes) continue;\n              const valueOptions = _objectSpread(_objectSpread({}, getValueTransition(defaultOptions, valueName)), getValueTransition(options, valueName));\n              const type = chooseLayerType(key);\n              /**\n               * If this is an opacity animation, and keyframes are not an array,\n               * we need to convert them into an array and set an initial value.\n               */\n              if (valueName === \"opacity\" && !Array.isArray(valueKeyframes)) {\n                const initialValue = type === \"new\" ? 0 : 1;\n                valueKeyframes = [initialValue, valueKeyframes];\n              }\n              /**\n               * Resolve stagger function if provided.\n               */\n              if (typeof valueOptions.delay === \"function\") {\n                valueOptions.delay = valueOptions.delay(0, 1);\n              }\n              const animation = new PseudoAnimation(document.documentElement, \"::view-transition-\".concat(type, \"(\").concat(target, \")\"), valueName, valueKeyframes, valueOptions);\n              animations.push(animation);\n            }\n          }\n        });\n        /**\n         * Handle browser generated animations\n         */\n        for (const animation of generatedViewAnimations) {\n          if (animation.playState === \"finished\") continue;\n          const {\n            effect\n          } = animation;\n          if (!effect || !(effect instanceof KeyframeEffect)) continue;\n          const {\n            pseudoElement\n          } = effect;\n          if (!pseudoElement) continue;\n          const name = getLayerName(pseudoElement);\n          if (!name) continue;\n          const targetDefinition = targets.get(name.layer);\n          if (!targetDefinition) {\n            /**\n             * If transition name is group then update the timing of the animation\n             * whereas if it's old or new then we could possibly replace it using\n             * the above method.\n             */\n            const transitionName = name.type === \"group\" ? \"layout\" : \"\";\n            const animationTransition = _objectSpread({}, getValueTransition(defaultOptions, transitionName));\n            applyGeneratorOptions(animationTransition);\n            const easing = mapEasingToNativeEasing(animationTransition.ease, animationTransition.duration);\n            effect.updateTiming({\n              delay: secondsToMilliseconds((_a = animationTransition.delay) !== null && _a !== void 0 ? _a : 0),\n              duration: animationTransition.duration,\n              easing\n            });\n            animations.push(new NativeAnimationControls(animation));\n          } else if (hasOpacity(targetDefinition, \"enter\") && hasOpacity(targetDefinition, \"exit\") && effect.getKeyframes().some(keyframe => keyframe.mixBlendMode)) {\n            animations.push(new NativeAnimationControls(animation));\n          } else {\n            animation.cancel();\n          }\n        }\n        resolve(new BaseGroupPlaybackControls(animations));\n      });\n    });\n  }\n  function hasOpacity(target, key) {\n    var _a;\n    return (_a = target === null || target === void 0 ? void 0 : target[key]) === null || _a === void 0 ? void 0 : _a.keyframes.opacity;\n  }\n}.call(this, module);","map":{"version":3,"names":["definitionNames","startViewAnimation","update","defaultOptions","targets","document","startViewTransition","Promise","resolve","BaseGroupPlaybackControls","hasTarget","css","set","commit","transition","finished","finally","remove","ready","then","_a","generatedViewAnimations","getViewAnimations","animations","forEach","definition","target","key","keyframes","options","valueName","valueKeyframes","Object","entries","valueOptions","_objectSpread","getValueTransition","type","chooseLayerType","Array","isArray","initialValue","delay","animation","PseudoAnimation","documentElement","concat","push","playState","effect","KeyframeEffect","pseudoElement","name","getLayerName","targetDefinition","get","layer","transitionName","animationTransition","applyGeneratorOptions","easing","mapEasingToNativeEasing","ease","duration","updateTiming","secondsToMilliseconds","NativeAnimationControls","hasOpacity","getKeyframes","some","keyframe","mixBlendMode","cancel","opacity","call","module"],"sources":["node_modules/motion-dom/dist/es/view/start.mjs"],"sourcesContent":["import { secondsToMilliseconds } from 'motion-utils';\nimport { BaseGroupPlaybackControls } from '../animation/controls/BaseGroup.mjs';\nimport { getValueTransition } from '../animation/utils/get-value-transition.mjs';\nimport { NativeAnimationControls } from '../animation/waapi/NativeAnimationControls.mjs';\nimport { PseudoAnimation } from '../animation/waapi/PseudoAnimation.mjs';\nimport { applyGeneratorOptions } from '../animation/waapi/utils/convert-options.mjs';\nimport { mapEasingToNativeEasing } from '../animation/waapi/utils/easing.mjs';\nimport { chooseLayerType } from './utils/choose-layer-type.mjs';\nimport { css } from './utils/css.mjs';\nimport { getLayerName } from './utils/get-layer-name.mjs';\nimport { getViewAnimations } from './utils/get-view-animations.mjs';\nimport { hasTarget } from './utils/has-target.mjs';\n\nconst definitionNames = [\"layout\", \"enter\", \"exit\", \"new\", \"old\"];\nfunction startViewAnimation(update, defaultOptions, targets) {\n    if (!document.startViewTransition) {\n        return new Promise(async (resolve) => {\n            await update();\n            resolve(new BaseGroupPlaybackControls([]));\n        });\n    }\n    // TODO: Go over existing targets and ensure they all have ids\n    /**\n     * If we don't have any animations defined for the root target,\n     * remove it from being captured.\n     */\n    if (!hasTarget(\"root\", targets)) {\n        css.set(\":root\", {\n            \"view-transition-name\": \"none\",\n        });\n    }\n    /**\n     * Set the timing curve to linear for all view transition layers.\n     * This gets baked into the keyframes, which can't be changed\n     * without breaking the generated animation.\n     *\n     * This allows us to set easing via updateTiming - which can be changed.\n     */\n    css.set(\"::view-transition-group(*), ::view-transition-old(*), ::view-transition-new(*)\", { \"animation-timing-function\": \"linear !important\" });\n    css.commit(); // Write\n    const transition = document.startViewTransition(async () => {\n        await update();\n        // TODO: Go over new targets and ensure they all have ids\n    });\n    transition.finished.finally(() => {\n        css.remove(); // Write\n    });\n    return new Promise((resolve) => {\n        transition.ready.then(() => {\n            var _a;\n            const generatedViewAnimations = getViewAnimations();\n            const animations = [];\n            /**\n             * Create animations for our definitions\n             */\n            targets.forEach((definition, target) => {\n                // TODO: If target is not \"root\", resolve elements\n                // and iterate over each\n                for (const key of definitionNames) {\n                    if (!definition[key])\n                        continue;\n                    const { keyframes, options } = definition[key];\n                    for (let [valueName, valueKeyframes] of Object.entries(keyframes)) {\n                        if (!valueKeyframes)\n                            continue;\n                        const valueOptions = {\n                            ...getValueTransition(defaultOptions, valueName),\n                            ...getValueTransition(options, valueName),\n                        };\n                        const type = chooseLayerType(key);\n                        /**\n                         * If this is an opacity animation, and keyframes are not an array,\n                         * we need to convert them into an array and set an initial value.\n                         */\n                        if (valueName === \"opacity\" &&\n                            !Array.isArray(valueKeyframes)) {\n                            const initialValue = type === \"new\" ? 0 : 1;\n                            valueKeyframes = [initialValue, valueKeyframes];\n                        }\n                        /**\n                         * Resolve stagger function if provided.\n                         */\n                        if (typeof valueOptions.delay === \"function\") {\n                            valueOptions.delay = valueOptions.delay(0, 1);\n                        }\n                        const animation = new PseudoAnimation(document.documentElement, `::view-transition-${type}(${target})`, valueName, valueKeyframes, valueOptions);\n                        animations.push(animation);\n                    }\n                }\n            });\n            /**\n             * Handle browser generated animations\n             */\n            for (const animation of generatedViewAnimations) {\n                if (animation.playState === \"finished\")\n                    continue;\n                const { effect } = animation;\n                if (!effect || !(effect instanceof KeyframeEffect))\n                    continue;\n                const { pseudoElement } = effect;\n                if (!pseudoElement)\n                    continue;\n                const name = getLayerName(pseudoElement);\n                if (!name)\n                    continue;\n                const targetDefinition = targets.get(name.layer);\n                if (!targetDefinition) {\n                    /**\n                     * If transition name is group then update the timing of the animation\n                     * whereas if it's old or new then we could possibly replace it using\n                     * the above method.\n                     */\n                    const transitionName = name.type === \"group\" ? \"layout\" : \"\";\n                    const animationTransition = {\n                        ...getValueTransition(defaultOptions, transitionName),\n                    };\n                    applyGeneratorOptions(animationTransition);\n                    const easing = mapEasingToNativeEasing(animationTransition.ease, animationTransition.duration);\n                    effect.updateTiming({\n                        delay: secondsToMilliseconds((_a = animationTransition.delay) !== null && _a !== void 0 ? _a : 0),\n                        duration: animationTransition.duration,\n                        easing,\n                    });\n                    animations.push(new NativeAnimationControls(animation));\n                }\n                else if (hasOpacity(targetDefinition, \"enter\") &&\n                    hasOpacity(targetDefinition, \"exit\") &&\n                    effect\n                        .getKeyframes()\n                        .some((keyframe) => keyframe.mixBlendMode)) {\n                    animations.push(new NativeAnimationControls(animation));\n                }\n                else {\n                    animation.cancel();\n                }\n            }\n            resolve(new BaseGroupPlaybackControls(animations));\n        });\n    });\n}\nfunction hasOpacity(target, key) {\n    var _a;\n    return (_a = target === null || target === void 0 ? void 0 : target[key]) === null || _a === void 0 ? void 0 : _a.keyframes.opacity;\n}\n\nexport { startViewAnimation };\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"d9dd8183366c5e39c4e3008e64ae96f6cf97dd7e"}
