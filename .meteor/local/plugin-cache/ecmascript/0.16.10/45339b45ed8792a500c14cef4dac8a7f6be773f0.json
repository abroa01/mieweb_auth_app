{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/node_modules/motion-dom/dist/es/gestures/press/index.mjs","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"node_modules/motion-dom/dist/es/gestures/press/index.mjs","filename":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/node_modules/motion-dom/dist/es/gestures/press/index.mjs","inputSourceMap":{"version":3,"names":["isDragActive","isNodeOrChild","isPrimaryPointer","setupGesture","isElementKeyboardAccessible","enableKeyboardPress","isPressing","isValidPressEvent","event","press","elementOrSelector","onPressStart","options","elements","eventOptions","cancelEvents","startPress","startEvent","element","currentTarget","has","add","onPressEnd","onPointerEnd","endEvent","success","window","removeEventListener","onPointerUp","onPointerCancel","delete","upEvent","useGlobalTarget","target","cancelEvent","addEventListener","forEach","getAttribute","tabIndex"],"sources":["node_modules/motion-dom/dist/es/gestures/press/index.mjs"],"sourcesContent":["import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n"],"mappings":";AAAA,SAASA,YAAY,QAAQ,6BAA6B;AAC1D,SAASC,aAAa,QAAQ,+BAA+B;AAC7D,SAASC,gBAAgB,QAAQ,iCAAiC;AAClE,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,2BAA2B,QAAQ,oCAAoC;AAChF,SAASC,mBAAmB,QAAQ,sBAAsB;AAC1D,SAASC,UAAU,QAAQ,mBAAmB;;AAE9C;AACA;AACA;AACA;AACA,SAASC,iBAAiBA,CAACC,KAAK,EAAE;EAC9B,OAAON,gBAAgB,CAACM,KAAK,CAAC,IAAI,CAACR,YAAY,CAAC,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASS,KAAKA,CAACC,iBAAiB,EAAEC,YAAY,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EAC1D,MAAM,CAACC,QAAQ,EAAEC,YAAY,EAAEC,YAAY,CAAC,GAAGZ,YAAY,CAACO,iBAAiB,EAAEE,OAAO,CAAC;EACvF,MAAMI,UAAU,GAAIC,UAAU,IAAK;IAC/B,MAAMC,OAAO,GAAGD,UAAU,CAACE,aAAa;IACxC,IAAI,CAACZ,iBAAiB,CAACU,UAAU,CAAC,IAAIX,UAAU,CAACc,GAAG,CAACF,OAAO,CAAC,EACzD;IACJZ,UAAU,CAACe,GAAG,CAACH,OAAO,CAAC;IACvB,MAAMI,UAAU,GAAGX,YAAY,CAACM,UAAU,CAAC;IAC3C,MAAMM,YAAY,GAAGA,CAACC,QAAQ,EAAEC,OAAO,KAAK;MACxCC,MAAM,CAACC,mBAAmB,CAAC,WAAW,EAAEC,WAAW,CAAC;MACpDF,MAAM,CAACC,mBAAmB,CAAC,eAAe,EAAEE,eAAe,CAAC;MAC5D,IAAI,CAACtB,iBAAiB,CAACiB,QAAQ,CAAC,IAAI,CAAClB,UAAU,CAACc,GAAG,CAACF,OAAO,CAAC,EAAE;QAC1D;MACJ;MACAZ,UAAU,CAACwB,MAAM,CAACZ,OAAO,CAAC;MAC1B,IAAI,OAAOI,UAAU,KAAK,UAAU,EAAE;QAClCA,UAAU,CAACE,QAAQ,EAAE;UAAEC;QAAQ,CAAC,CAAC;MACrC;IACJ,CAAC;IACD,MAAMG,WAAW,GAAIG,OAAO,IAAK;MAC7BR,YAAY,CAACQ,OAAO,EAAEnB,OAAO,CAACoB,eAAe,IACzC/B,aAAa,CAACiB,OAAO,EAAEa,OAAO,CAACE,MAAM,CAAC,CAAC;IAC/C,CAAC;IACD,MAAMJ,eAAe,GAAIK,WAAW,IAAK;MACrCX,YAAY,CAACW,WAAW,EAAE,KAAK,CAAC;IACpC,CAAC;IACDR,MAAM,CAACS,gBAAgB,CAAC,WAAW,EAAEP,WAAW,EAAEd,YAAY,CAAC;IAC/DY,MAAM,CAACS,gBAAgB,CAAC,eAAe,EAAEN,eAAe,EAAEf,YAAY,CAAC;EAC3E,CAAC;EACDD,QAAQ,CAACuB,OAAO,CAAElB,OAAO,IAAK;IAC1B,IAAI,CAACd,2BAA2B,CAACc,OAAO,CAAC,IACrCA,OAAO,CAACmB,YAAY,CAAC,UAAU,CAAC,KAAK,IAAI,EAAE;MAC3CnB,OAAO,CAACoB,QAAQ,GAAG,CAAC;IACxB;IACA,MAAML,MAAM,GAAGrB,OAAO,CAACoB,eAAe,GAAGN,MAAM,GAAGR,OAAO;IACzDe,MAAM,CAACE,gBAAgB,CAAC,aAAa,EAAEnB,UAAU,EAAEF,YAAY,CAAC;IAChEI,OAAO,CAACiB,gBAAgB,CAAC,OAAO,EAAG3B,KAAK,IAAKH,mBAAmB,CAACG,KAAK,EAAEM,YAAY,CAAC,EAAEA,YAAY,CAAC;EACxG,CAAC,CAAC;EACF,OAAOC,YAAY;AACvB;AAEA,SAASN,KAAK","ignoreList":[]},"targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth","root":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/node_modules/motion-dom/dist/es/gestures/press/index.mjs","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"node_modules/motion-dom/dist/es/gestures/press/index.mjs","inputSourceMap":{"version":3,"names":["isDragActive","isNodeOrChild","isPrimaryPointer","setupGesture","isElementKeyboardAccessible","enableKeyboardPress","isPressing","isValidPressEvent","event","press","elementOrSelector","onPressStart","options","elements","eventOptions","cancelEvents","startPress","startEvent","element","currentTarget","has","add","onPressEnd","onPointerEnd","endEvent","success","window","removeEventListener","onPointerUp","onPointerCancel","delete","upEvent","useGlobalTarget","target","cancelEvent","addEventListener","forEach","getAttribute","tabIndex"],"sources":["node_modules/motion-dom/dist/es/gestures/press/index.mjs"],"sourcesContent":["import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n"],"mappings":"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","ignoreList":[]}}},"code":"!function (module1) {\n  module1.export({\n    press: () => press\n  });\n  let isDragActive;\n  module1.link(\"../drag/state/is-active.mjs\", {\n    isDragActive(v) {\n      isDragActive = v;\n    }\n  }, 0);\n  let isNodeOrChild;\n  module1.link(\"../utils/is-node-or-child.mjs\", {\n    isNodeOrChild(v) {\n      isNodeOrChild = v;\n    }\n  }, 1);\n  let isPrimaryPointer;\n  module1.link(\"../utils/is-primary-pointer.mjs\", {\n    isPrimaryPointer(v) {\n      isPrimaryPointer = v;\n    }\n  }, 2);\n  let setupGesture;\n  module1.link(\"../utils/setup.mjs\", {\n    setupGesture(v) {\n      setupGesture = v;\n    }\n  }, 3);\n  let isElementKeyboardAccessible;\n  module1.link(\"./utils/is-keyboard-accessible.mjs\", {\n    isElementKeyboardAccessible(v) {\n      isElementKeyboardAccessible = v;\n    }\n  }, 4);\n  let enableKeyboardPress;\n  module1.link(\"./utils/keyboard.mjs\", {\n    enableKeyboardPress(v) {\n      enableKeyboardPress = v;\n    }\n  }, 5);\n  let isPressing;\n  module1.link(\"./utils/state.mjs\", {\n    isPressing(v) {\n      isPressing = v;\n    }\n  }, 6);\n  ___INIT_METEOR_FAST_REFRESH(module);\n  /**\n   * Filter out events that are not primary pointer events, or are triggering\n   * while a Motion gesture is active.\n   */\n  function isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n  }\n  /**\n   * Create a press gesture.\n   *\n   * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n   * automatically filters out secondary pointer events like right\n   * click and multitouch.\n   *\n   * It also adds accessibility support for keyboards, where\n   * an element with a press gesture will receive focus and\n   *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n   *\n   * This is different to a browser's `\"click\"` event, which does\n   * respond to keyboards but only for the `\"click\"` itself, rather\n   * than the press start and end/cancel. The element also needs\n   * to be focusable for this to work, whereas a press gesture will\n   * make an element focusable by default.\n   *\n   * @public\n   */\n  function press(elementOrSelector, onPressStart) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = startEvent => {\n      const element = startEvent.currentTarget;\n      if (!isValidPressEvent(startEvent) || isPressing.has(element)) return;\n      isPressing.add(element);\n      const onPressEnd = onPressStart(startEvent);\n      const onPointerEnd = (endEvent, success) => {\n        window.removeEventListener(\"pointerup\", onPointerUp);\n        window.removeEventListener(\"pointercancel\", onPointerCancel);\n        if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n          return;\n        }\n        isPressing.delete(element);\n        if (typeof onPressEnd === \"function\") {\n          onPressEnd(endEvent, {\n            success\n          });\n        }\n      };\n      const onPointerUp = upEvent => {\n        onPointerEnd(upEvent, options.useGlobalTarget || isNodeOrChild(element, upEvent.target));\n      };\n      const onPointerCancel = cancelEvent => {\n        onPointerEnd(cancelEvent, false);\n      };\n      window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n      window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach(element => {\n      if (!isElementKeyboardAccessible(element) && element.getAttribute(\"tabindex\") === null) {\n        element.tabIndex = 0;\n      }\n      const target = options.useGlobalTarget ? window : element;\n      target.addEventListener(\"pointerdown\", startPress, eventOptions);\n      element.addEventListener(\"focus\", event => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n  }\n}.call(this, module);","map":{"version":3,"names":["isValidPressEvent","event","isPrimaryPointer","isDragActive","press","elementOrSelector","onPressStart","options","arguments","length","undefined","elements","eventOptions","cancelEvents","setupGesture","startPress","startEvent","element","currentTarget","isPressing","has","add","onPressEnd","onPointerEnd","endEvent","success","window","removeEventListener","onPointerUp","onPointerCancel","delete","upEvent","useGlobalTarget","isNodeOrChild","target","cancelEvent","addEventListener","forEach","isElementKeyboardAccessible","getAttribute","tabIndex","enableKeyboardPress","call","module"],"sources":["node_modules/motion-dom/dist/es/gestures/press/index.mjs"],"sourcesContent":["import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAQA;AACA;AACA;AACA;EACA,SAASA,iBAAiBA,CAACC,KAAK,EAAE;IAC9B,OAAOC,gBAAgB,CAACD,KAAK,CAAC,IAAI,CAACE,YAAY,CAAC,CAAC;EACrD;EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,SAASC,KAAKA,CAACC,iBAAiB,EAAEC,YAAY,EAAgB;IAAA,IAAdC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IACxD,MAAM,CAACG,QAAQ,EAAEC,YAAY,EAAEC,YAAY,CAAC,GAAGC,YAAY,CAACT,iBAAiB,EAAEE,OAAO,CAAC;IACvF,MAAMQ,UAAU,GAAIC,UAAU,IAAK;MAC/B,MAAMC,OAAO,GAAGD,UAAU,CAACE,aAAa;MACxC,IAAI,CAAClB,iBAAiB,CAACgB,UAAU,CAAC,IAAIG,UAAU,CAACC,GAAG,CAACH,OAAO,CAAC,EACzD;MACJE,UAAU,CAACE,GAAG,CAACJ,OAAO,CAAC;MACvB,MAAMK,UAAU,GAAGhB,YAAY,CAACU,UAAU,CAAC;MAC3C,MAAMO,YAAY,GAAGA,CAACC,QAAQ,EAAEC,OAAO,KAAK;QACxCC,MAAM,CAACC,mBAAmB,CAAC,WAAW,EAAEC,WAAW,CAAC;QACpDF,MAAM,CAACC,mBAAmB,CAAC,eAAe,EAAEE,eAAe,CAAC;QAC5D,IAAI,CAAC7B,iBAAiB,CAACwB,QAAQ,CAAC,IAAI,CAACL,UAAU,CAACC,GAAG,CAACH,OAAO,CAAC,EAAE;UAC1D;QACJ;QACAE,UAAU,CAACW,MAAM,CAACb,OAAO,CAAC;QAC1B,IAAI,OAAOK,UAAU,KAAK,UAAU,EAAE;UAClCA,UAAU,CAACE,QAAQ,EAAE;YAAEC;UAAQ,CAAC,CAAC;QACrC;MACJ,CAAC;MACD,MAAMG,WAAW,GAAIG,OAAO,IAAK;QAC7BR,YAAY,CAACQ,OAAO,EAAExB,OAAO,CAACyB,eAAe,IACzCC,aAAa,CAAChB,OAAO,EAAEc,OAAO,CAACG,MAAM,CAAC,CAAC;MAC/C,CAAC;MACD,MAAML,eAAe,GAAIM,WAAW,IAAK;QACrCZ,YAAY,CAACY,WAAW,EAAE,KAAK,CAAC;MACpC,CAAC;MACDT,MAAM,CAACU,gBAAgB,CAAC,WAAW,EAAER,WAAW,EAAEhB,YAAY,CAAC;MAC/Dc,MAAM,CAACU,gBAAgB,CAAC,eAAe,EAAEP,eAAe,EAAEjB,YAAY,CAAC;IAC3E,CAAC;IACDD,QAAQ,CAAC0B,OAAO,CAAEpB,OAAO,IAAK;MAC1B,IAAI,CAACqB,2BAA2B,CAACrB,OAAO,CAAC,IACrCA,OAAO,CAACsB,YAAY,CAAC,UAAU,CAAC,KAAK,IAAI,EAAE;QAC3CtB,OAAO,CAACuB,QAAQ,GAAG,CAAC;MACxB;MACA,MAAMN,MAAM,GAAG3B,OAAO,CAACyB,eAAe,GAAGN,MAAM,GAAGT,OAAO;MACzDiB,MAAM,CAACE,gBAAgB,CAAC,aAAa,EAAErB,UAAU,EAAEH,YAAY,CAAC;MAChEK,OAAO,CAACmB,gBAAgB,CAAC,OAAO,EAAGnC,KAAK,IAAKwC,mBAAmB,CAACxC,KAAK,EAAEW,YAAY,CAAC,EAAEA,YAAY,CAAC;IACxG,CAAC,CAAC;IACF,OAAOC,YAAY;EACvB;AAAA,EAAA6B,IAAA,OAAAC,MAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"45339b45ed8792a500c14cef4dac8a7f6be773f0"}
