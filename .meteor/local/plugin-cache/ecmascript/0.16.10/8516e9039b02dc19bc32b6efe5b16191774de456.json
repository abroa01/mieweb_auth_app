{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/packages/reactive-dict/reactive-dict.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.cordova"},"sourceFileName":"packages/reactive-dict/reactive-dict.js","filename":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/packages/reactive-dict/reactive-dict.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth","root":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]}},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/packages/reactive-dict/reactive-dict.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/reactive-dict/reactive-dict.js"}},"code":"var _typeof;\nmodule.link(\"@babel/runtime/helpers/typeof\", {\n  default: function (v) {\n    _typeof = v;\n  }\n}, 0);\nmodule.export({\n  ReactiveDict: function () {\n    return ReactiveDict;\n  }\n});\nvar hasOwn = Object.prototype.hasOwnProperty;\n\n// XXX come up with a serialization method which canonicalizes object key\n// order, which would allow us to use objects as values for equals.\nfunction stringify(value) {\n  if (value === undefined) {\n    return 'undefined';\n  }\n  return EJSON.stringify(value);\n}\nfunction parse(serialized) {\n  if (serialized === undefined || serialized === 'undefined') {\n    return undefined;\n  }\n  return EJSON.parse(serialized);\n}\nfunction changed(v) {\n  v && v.changed();\n}\n\n// XXX COMPAT WITH 0.9.1 : accept migrationData instead of dictName\n/**\n * @class\n * @instanceName ReactiveDict\n * @summary Constructor for a ReactiveDict, which represents a reactive dictionary of key/value pairs.\n * @locus Client\n * @param {String} [name] Optional.  When a name is passed, preserves contents across Hot Code Pushes\n * @param {Object} [initialValue] Optional.  The default values for the dictionary\n */\nvar ReactiveDict = /*#__PURE__*/function () {\n  function ReactiveDict(dictName, dictData) {\n    // this.keys: key -> value\n    this.keys = {};\n    if (dictName) {\n      // name given; migration will be performed\n      if (typeof dictName === 'string') {\n        // the normal case, argument is a string name.\n\n        // Only run migration logic on client, it will cause\n        // duplicate name errors on server during reloads.\n        // _registerDictForMigrate will throw an error on duplicate name.\n        Meteor.isClient && ReactiveDict._registerDictForMigrate(dictName, this);\n        var migratedData = Meteor.isClient && ReactiveDict._loadMigratedDict(dictName);\n        if (migratedData) {\n          // Don't stringify migrated data\n          this.keys = migratedData;\n        } else {\n          // Use _setObject to make sure values are stringified\n          this._setObject(dictData || {});\n        }\n        this.name = dictName;\n      } else if (_typeof(dictName) === 'object') {\n        // back-compat case: dictName is actually migrationData\n        // Use _setObject to make sure values are stringified\n        this._setObject(dictName);\n      } else {\n        throw new Error(\"Invalid ReactiveDict argument: \" + dictName);\n      }\n    } else if (_typeof(dictData) === 'object') {\n      this._setObject(dictData);\n    }\n    this.allDeps = new Tracker.Dependency();\n    this.keyDeps = {}; // key -> Dependency\n    this.keyValueDeps = {}; // key -> Dependency\n  }\n\n  // set() began as a key/value method, but we are now overloading it\n  // to take an object of key/value pairs, similar to backbone\n  // http://backbonejs.org/#Model-set\n  /**\n   * @summary Set a value for a key in the ReactiveDict. Notify any listeners\n   * that the value has changed (eg: redraw templates, and rerun any\n   * [`Tracker.autorun`](#tracker_autorun) computations, that called\n   * [`ReactiveDict.get`](#ReactiveDict_get) on this `key`.)\n   * @locus Client\n   * @param {String} key The key to set, eg, `selectedItem`\n   * @param {EJSONable | undefined} value The new value for `key`\n   */\n  var _proto = ReactiveDict.prototype;\n  _proto.set = function () {\n    function set(keyOrObject, value) {\n      if (_typeof(keyOrObject) === 'object' && value === undefined) {\n        // Called as `dict.set({...})`\n        this._setObject(keyOrObject);\n        return;\n      }\n      // the input isn't an object, so it must be a key\n      // and we resume with the rest of the function\n      var key = keyOrObject;\n      value = stringify(value);\n      var keyExisted = hasOwn.call(this.keys, key);\n      var oldSerializedValue = keyExisted ? this.keys[key] : 'undefined';\n      var isNewValue = value !== oldSerializedValue;\n      this.keys[key] = value;\n      if (isNewValue || !keyExisted) {\n        // Using the changed utility function here because this.allDeps might not exist yet,\n        // when setting initial data from constructor\n        changed(this.allDeps);\n      }\n\n      // Don't trigger changes when setting initial data from constructor,\n      // this.KeyDeps is undefined in this case\n      if (isNewValue && this.keyDeps) {\n        changed(this.keyDeps[key]);\n        if (this.keyValueDeps[key]) {\n          changed(this.keyValueDeps[key][oldSerializedValue]);\n          changed(this.keyValueDeps[key][value]);\n        }\n      }\n    }\n    return set;\n  }()\n  /**\n   * @summary Set a value for a key if it hasn't been set before.\n   * Otherwise works exactly the same as [`ReactiveDict.set`](#ReactiveDict-set).\n   * @locus Client\n   * @param {String} key The key to set, eg, `selectedItem`\n   * @param {EJSONable | undefined} value The new value for `key`\n   */\n  ;\n  _proto.setDefault = function () {\n    function setDefault(keyOrObject, value) {\n      if (_typeof(keyOrObject) === 'object' && value === undefined) {\n        // Called as `dict.setDefault({...})`\n        this._setDefaultObject(keyOrObject);\n        return;\n      }\n      // the input isn't an object, so it must be a key\n      // and we resume with the rest of the function\n      var key = keyOrObject;\n      if (!hasOwn.call(this.keys, key)) {\n        this.set(key, value);\n      }\n    }\n    return setDefault;\n  }()\n  /**\n   * @summary Get the value assiciated with a key. If inside a [reactive\n   * computation](#reactivity), invalidate the computation the next time the\n   * value associated with this key is changed by\n   * [`ReactiveDict.set`](#ReactiveDict-set).\n   * This returns a clone of the value, so if it's an object or an array,\n   * mutating the returned value has no effect on the value stored in the\n   * ReactiveDict.\n   * @locus Client\n   * @param {String} key The key of the element to return\n   */\n  ;\n  _proto.get = function () {\n    function get(key) {\n      this._ensureKey(key);\n      this.keyDeps[key].depend();\n      return parse(this.keys[key]);\n    }\n    return get;\n  }()\n  /**\n   * @summary Test if the stored entry for a key is equal to a value. If inside a\n   * [reactive computation](#reactivity), invalidate the computation the next\n   * time the variable changes to or from the value.\n   * @locus Client\n   * @param {String} key The name of the session variable to test\n   * @param {String | Number | Boolean | null | undefined} value The value to\n   * test against\n   */\n  ;\n  _proto.equals = function () {\n    function equals(key, value) {\n      var _this = this;\n      // Mongo.ObjectID is in the 'mongo' package\n      var ObjectID = null;\n      if (Package.mongo) {\n        ObjectID = Package.mongo.Mongo.ObjectID;\n      }\n      // We don't allow objects (or arrays that might include objects) for\n      // .equals, because JSON.stringify doesn't canonicalize object key\n      // order. (We can make equals have the right return value by parsing the\n      // current value and using EJSON.equals, but we won't have a canonical\n      // element of keyValueDeps[key] to store the dependency.) You can still use\n      // \"EJSON.equals(reactiveDict.get(key), value)\".\n      //\n      // XXX we could allow arrays as long as we recursively check that there\n      // are no objects\n      if (typeof value !== 'string' && typeof value !== 'number' && typeof value !== 'boolean' && typeof value !== 'undefined' && !(value instanceof Date) && !(ObjectID && value instanceof ObjectID) && value !== null) {\n        throw new Error(\"ReactiveDict.equals: value must be scalar\");\n      }\n      var serializedValue = stringify(value);\n      if (Tracker.active) {\n        this._ensureKey(key);\n        if (!hasOwn.call(this.keyValueDeps[key], serializedValue)) {\n          this.keyValueDeps[key][serializedValue] = new Tracker.Dependency();\n        }\n        var isNew = this.keyValueDeps[key][serializedValue].depend();\n        if (isNew) {\n          Tracker.onInvalidate(function () {\n            // clean up [key][serializedValue] if it's now empty, so we don't\n            // use O(n) memory for n = values seen ever\n            if (!_this.keyValueDeps[key][serializedValue].hasDependents()) {\n              delete _this.keyValueDeps[key][serializedValue];\n            }\n          });\n        }\n      }\n      var oldValue = undefined;\n      if (hasOwn.call(this.keys, key)) {\n        oldValue = parse(this.keys[key]);\n      }\n      return EJSON.equals(oldValue, value);\n    }\n    return equals;\n  }()\n  /**\n   * @summary Get all key-value pairs as a plain object. If inside a [reactive\n   * computation](#reactivity), invalidate the computation the next time the\n   * value associated with any key is changed by\n   * [`ReactiveDict.set`](#ReactiveDict-set).\n   * This returns a clone of each value, so if it's an object or an array,\n   * mutating the returned value has no effect on the value stored in the\n   * ReactiveDict.\n   * @locus Client\n   */\n  ;\n  _proto.all = function () {\n    function all() {\n      var _this2 = this;\n      this.allDeps.depend();\n      var ret = {};\n      Object.keys(this.keys).forEach(function (key) {\n        ret[key] = parse(_this2.keys[key]);\n      });\n      return ret;\n    }\n    return all;\n  }()\n  /**\n   * @summary remove all key-value pairs from the ReactiveDict. Notify any\n   * listeners that the value has changed (eg: redraw templates, and rerun any\n   * [`Tracker.autorun`](#tracker_autorun) computations, that called\n   * [`ReactiveDict.get`](#ReactiveDict_get) on this `key`.)\n   * @locus Client\n   */\n  ;\n  _proto.clear = function () {\n    function clear() {\n      var _this3 = this;\n      var oldKeys = this.keys;\n      this.keys = {};\n      this.allDeps.changed();\n      Object.keys(oldKeys).forEach(function (key) {\n        changed(_this3.keyDeps[key]);\n        if (_this3.keyValueDeps[key]) {\n          changed(_this3.keyValueDeps[key][oldKeys[key]]);\n          changed(_this3.keyValueDeps[key]['undefined']);\n        }\n      });\n    }\n    return clear;\n  }()\n  /**\n   * @summary remove a key-value pair from the ReactiveDict. Notify any listeners\n   * that the value has changed (eg: redraw templates, and rerun any\n   * [`Tracker.autorun`](#tracker_autorun) computations, that called\n   * [`ReactiveDict.get`](#ReactiveDict_get) on this `key`.)\n   * @locus Client\n   * @param {String} key The key to delete, eg, `selectedItem`\n   */\n  ;\n  _proto.delete = function () {\n    function _delete(key) {\n      var didRemove = false;\n      if (hasOwn.call(this.keys, key)) {\n        var oldValue = this.keys[key];\n        delete this.keys[key];\n        changed(this.keyDeps[key]);\n        if (this.keyValueDeps[key]) {\n          changed(this.keyValueDeps[key][oldValue]);\n          changed(this.keyValueDeps[key]['undefined']);\n        }\n        this.allDeps.changed();\n        didRemove = true;\n      }\n      return didRemove;\n    }\n    return _delete;\n  }()\n  /**\n   * @summary Clear all values from the reactiveDict and prevent it from being\n   * migrated on a Hot Code Pushes. Notify any listeners\n   * that the value has changed (eg: redraw templates, and rerun any\n   * [`Tracker.autorun`](#tracker_autorun) computations, that called\n   * [`ReactiveDict.get`](#ReactiveDict_get) on this `key`.)\n   * @locus Client\n   */\n  ;\n  _proto.destroy = function () {\n    function destroy() {\n      this.clear();\n      if (this.name && hasOwn.call(ReactiveDict._dictsToMigrate, this.name)) {\n        delete ReactiveDict._dictsToMigrate[this.name];\n      }\n    }\n    return destroy;\n  }();\n  _proto._setObject = function () {\n    function _setObject(object) {\n      var _this4 = this;\n      Object.keys(object).forEach(function (key) {\n        _this4.set(key, object[key]);\n      });\n    }\n    return _setObject;\n  }();\n  _proto._setDefaultObject = function () {\n    function _setDefaultObject(object) {\n      var _this5 = this;\n      Object.keys(object).forEach(function (key) {\n        _this5.setDefault(key, object[key]);\n      });\n    }\n    return _setDefaultObject;\n  }();\n  _proto._ensureKey = function () {\n    function _ensureKey(key) {\n      if (!(key in this.keyDeps)) {\n        this.keyDeps[key] = new Tracker.Dependency();\n        this.keyValueDeps[key] = {};\n      }\n    }\n    return _ensureKey;\n  }() // Get a JSON value that can be passed to the constructor to\n  // create a new ReactiveDict with the same contents as this one\n  ;\n  _proto._getMigrationData = function () {\n    function _getMigrationData() {\n      // XXX sanitize and make sure it's JSONible?\n      return this.keys;\n    }\n    return _getMigrationData;\n  }();\n  return ReactiveDict;\n}();","map":{"version":3,"names":["_typeof","module","link","default","v","export","ReactiveDict","hasOwn","Object","prototype","hasOwnProperty","stringify","value","undefined","EJSON","parse","serialized","changed","dictName","dictData","keys","Meteor","isClient","_registerDictForMigrate","migratedData","_loadMigratedDict","_setObject","name","Error","allDeps","Tracker","Dependency","keyDeps","keyValueDeps","_proto","set","keyOrObject","key","keyExisted","call","oldSerializedValue","isNewValue","setDefault","_setDefaultObject","get","_ensureKey","depend","equals","_this","ObjectID","Package","mongo","Mongo","Date","serializedValue","active","isNew","onInvalidate","hasDependents","oldValue","all","_this2","ret","forEach","clear","_this3","oldKeys","delete","didRemove","destroy","_dictsToMigrate","object","_this4","_this5","_getMigrationData"],"sources":["packages/reactive-dict/reactive-dict.js"],"sourcesContent":["const hasOwn = Object.prototype.hasOwnProperty;\n\n// XXX come up with a serialization method which canonicalizes object key\n// order, which would allow us to use objects as values for equals.\nfunction stringify(value) {\n  if (value === undefined) {\n    return 'undefined';\n  }\n  return EJSON.stringify(value);\n}\n\nfunction parse(serialized) {\n  if (serialized === undefined || serialized === 'undefined') {\n    return undefined;\n  }\n  return EJSON.parse(serialized);\n}\n\nfunction changed(v) {\n  v && v.changed();\n}\n\n// XXX COMPAT WITH 0.9.1 : accept migrationData instead of dictName\n/**\n * @class\n * @instanceName ReactiveDict\n * @summary Constructor for a ReactiveDict, which represents a reactive dictionary of key/value pairs.\n * @locus Client\n * @param {String} [name] Optional.  When a name is passed, preserves contents across Hot Code Pushes\n * @param {Object} [initialValue] Optional.  The default values for the dictionary\n */\nexport class ReactiveDict {\n  constructor(dictName, dictData) {\n    // this.keys: key -> value\n    this.keys = {};\n\n    if (dictName) {\n      // name given; migration will be performed\n      if (typeof dictName === 'string') {\n        // the normal case, argument is a string name.\n\n        // Only run migration logic on client, it will cause\n        // duplicate name errors on server during reloads.\n        // _registerDictForMigrate will throw an error on duplicate name.\n        Meteor.isClient && ReactiveDict._registerDictForMigrate(dictName, this);\n        const migratedData = Meteor.isClient && ReactiveDict._loadMigratedDict(dictName);\n\n        if (migratedData) {\n          // Don't stringify migrated data\n          this.keys = migratedData;\n        } else {\n          // Use _setObject to make sure values are stringified\n          this._setObject(dictData || {});\n        }\n        this.name = dictName;\n      } else if (typeof dictName === 'object') {\n        // back-compat case: dictName is actually migrationData\n        // Use _setObject to make sure values are stringified\n        this._setObject(dictName);\n      } else {\n        throw new Error(\"Invalid ReactiveDict argument: \" + dictName);\n      }\n    } else if (typeof dictData === 'object') {\n      this._setObject(dictData);\n    }\n\n    this.allDeps = new Tracker.Dependency;\n    this.keyDeps = {}; // key -> Dependency\n    this.keyValueDeps = {}; // key -> Dependency\n  }\n\n  // set() began as a key/value method, but we are now overloading it\n  // to take an object of key/value pairs, similar to backbone\n  // http://backbonejs.org/#Model-set\n  /**\n   * @summary Set a value for a key in the ReactiveDict. Notify any listeners\n   * that the value has changed (eg: redraw templates, and rerun any\n   * [`Tracker.autorun`](#tracker_autorun) computations, that called\n   * [`ReactiveDict.get`](#ReactiveDict_get) on this `key`.)\n   * @locus Client\n   * @param {String} key The key to set, eg, `selectedItem`\n   * @param {EJSONable | undefined} value The new value for `key`\n   */\n  set(keyOrObject, value) {\n    if ((typeof keyOrObject === 'object') && (value === undefined)) {\n      // Called as `dict.set({...})`\n      this._setObject(keyOrObject);\n      return;\n    }\n    // the input isn't an object, so it must be a key\n    // and we resume with the rest of the function\n    const key = keyOrObject;\n\n    value = stringify(value);\n\n    const keyExisted = hasOwn.call(this.keys, key);\n    const oldSerializedValue = keyExisted ? this.keys[key] : 'undefined';\n    const isNewValue = (value !== oldSerializedValue);\n\n    this.keys[key] = value;\n\n    if (isNewValue || !keyExisted) {\n      // Using the changed utility function here because this.allDeps might not exist yet,\n      // when setting initial data from constructor\n      changed(this.allDeps);\n    }\n\n    // Don't trigger changes when setting initial data from constructor,\n    // this.KeyDeps is undefined in this case\n    if (isNewValue && this.keyDeps) {\n      changed(this.keyDeps[key]);\n      if (this.keyValueDeps[key]) {\n        changed(this.keyValueDeps[key][oldSerializedValue]);\n        changed(this.keyValueDeps[key][value]);\n      }\n    }\n  }\n\n  /**\n   * @summary Set a value for a key if it hasn't been set before.\n   * Otherwise works exactly the same as [`ReactiveDict.set`](#ReactiveDict-set).\n   * @locus Client\n   * @param {String} key The key to set, eg, `selectedItem`\n   * @param {EJSONable | undefined} value The new value for `key`\n   */\n  setDefault(keyOrObject, value) {\n    if ((typeof keyOrObject === 'object') && (value === undefined)) {\n      // Called as `dict.setDefault({...})`\n      this._setDefaultObject(keyOrObject);\n      return;\n    }\n    // the input isn't an object, so it must be a key\n    // and we resume with the rest of the function\n    const key = keyOrObject;\n\n    if (! hasOwn.call(this.keys, key)) {\n      this.set(key, value);\n    }\n  }\n\n  /**\n   * @summary Get the value assiciated with a key. If inside a [reactive\n   * computation](#reactivity), invalidate the computation the next time the\n   * value associated with this key is changed by\n   * [`ReactiveDict.set`](#ReactiveDict-set).\n   * This returns a clone of the value, so if it's an object or an array,\n   * mutating the returned value has no effect on the value stored in the\n   * ReactiveDict.\n   * @locus Client\n   * @param {String} key The key of the element to return\n   */\n  get(key) {\n    this._ensureKey(key);\n    this.keyDeps[key].depend();\n    return parse(this.keys[key]);\n  }\n\n  /**\n   * @summary Test if the stored entry for a key is equal to a value. If inside a\n   * [reactive computation](#reactivity), invalidate the computation the next\n   * time the variable changes to or from the value.\n   * @locus Client\n   * @param {String} key The name of the session variable to test\n   * @param {String | Number | Boolean | null | undefined} value The value to\n   * test against\n   */\n  equals(key, value) {\n    // Mongo.ObjectID is in the 'mongo' package\n    let ObjectID = null;\n    if (Package.mongo) {\n      ObjectID = Package.mongo.Mongo.ObjectID;\n    }\n    // We don't allow objects (or arrays that might include objects) for\n    // .equals, because JSON.stringify doesn't canonicalize object key\n    // order. (We can make equals have the right return value by parsing the\n    // current value and using EJSON.equals, but we won't have a canonical\n    // element of keyValueDeps[key] to store the dependency.) You can still use\n    // \"EJSON.equals(reactiveDict.get(key), value)\".\n    //\n    // XXX we could allow arrays as long as we recursively check that there\n    // are no objects\n    if (typeof value !== 'string' &&\n        typeof value !== 'number' &&\n        typeof value !== 'boolean' &&\n        typeof value !== 'undefined' &&\n        !(value instanceof Date) &&\n        !(ObjectID && value instanceof ObjectID) &&\n        value !== null) {\n      throw new Error(\"ReactiveDict.equals: value must be scalar\");\n    }\n    const serializedValue = stringify(value);\n\n    if (Tracker.active) {\n      this._ensureKey(key);\n\n      if (! hasOwn.call(this.keyValueDeps[key], serializedValue)) {\n        this.keyValueDeps[key][serializedValue] = new Tracker.Dependency;\n      }\n\n      var isNew = this.keyValueDeps[key][serializedValue].depend();\n      if (isNew) {\n        Tracker.onInvalidate(() => {\n          // clean up [key][serializedValue] if it's now empty, so we don't\n          // use O(n) memory for n = values seen ever\n          if (! this.keyValueDeps[key][serializedValue].hasDependents()) {\n            delete this.keyValueDeps[key][serializedValue];\n          }\n        });\n      }\n    }\n\n    let oldValue = undefined;\n    if (hasOwn.call(this.keys, key)) {\n      oldValue = parse(this.keys[key]);\n    }\n    return EJSON.equals(oldValue, value);\n  }\n\n  /**\n   * @summary Get all key-value pairs as a plain object. If inside a [reactive\n   * computation](#reactivity), invalidate the computation the next time the\n   * value associated with any key is changed by\n   * [`ReactiveDict.set`](#ReactiveDict-set).\n   * This returns a clone of each value, so if it's an object or an array,\n   * mutating the returned value has no effect on the value stored in the\n   * ReactiveDict.\n   * @locus Client\n   */\n  all() {\n    this.allDeps.depend();\n    let ret = {};\n    Object.keys(this.keys).forEach(key => {\n      ret[key] = parse(this.keys[key]);\n    });\n    return ret;\n  }\n\n  /**\n   * @summary remove all key-value pairs from the ReactiveDict. Notify any\n   * listeners that the value has changed (eg: redraw templates, and rerun any\n   * [`Tracker.autorun`](#tracker_autorun) computations, that called\n   * [`ReactiveDict.get`](#ReactiveDict_get) on this `key`.)\n   * @locus Client\n   */\n  clear() {\n    const oldKeys = this.keys;\n    this.keys = {};\n\n    this.allDeps.changed();\n\n    Object.keys(oldKeys).forEach(key => {\n      changed(this.keyDeps[key]);\n      if (this.keyValueDeps[key]) {\n        changed(this.keyValueDeps[key][oldKeys[key]]);\n        changed(this.keyValueDeps[key]['undefined']);\n      }\n    });\n  }\n\n  /**\n   * @summary remove a key-value pair from the ReactiveDict. Notify any listeners\n   * that the value has changed (eg: redraw templates, and rerun any\n   * [`Tracker.autorun`](#tracker_autorun) computations, that called\n   * [`ReactiveDict.get`](#ReactiveDict_get) on this `key`.)\n   * @locus Client\n   * @param {String} key The key to delete, eg, `selectedItem`\n   */\n  delete(key) {\n    let didRemove = false;\n\n    if (hasOwn.call(this.keys, key)) {\n      const oldValue = this.keys[key];\n      delete this.keys[key];\n      changed(this.keyDeps[key]);\n      if (this.keyValueDeps[key]) {\n        changed(this.keyValueDeps[key][oldValue]);\n        changed(this.keyValueDeps[key]['undefined']);\n      }\n      this.allDeps.changed();\n      didRemove = true;\n    }\n    return didRemove;\n  }\n\n  /**\n   * @summary Clear all values from the reactiveDict and prevent it from being\n   * migrated on a Hot Code Pushes. Notify any listeners\n   * that the value has changed (eg: redraw templates, and rerun any\n   * [`Tracker.autorun`](#tracker_autorun) computations, that called\n   * [`ReactiveDict.get`](#ReactiveDict_get) on this `key`.)\n   * @locus Client\n   */\n  destroy() {\n    this.clear();\n    if (this.name && hasOwn.call(ReactiveDict._dictsToMigrate, this.name)) {\n      delete ReactiveDict._dictsToMigrate[this.name];\n    }\n  }\n\n  _setObject(object) {\n    Object.keys(object).forEach(key => {\n      this.set(key, object[key]);\n    });\n  }\n\n  _setDefaultObject(object) {\n    Object.keys(object).forEach(key => {\n      this.setDefault(key, object[key]);\n    });\n  }\n\n  _ensureKey(key) {\n    if (!(key in this.keyDeps)) {\n      this.keyDeps[key] = new Tracker.Dependency;\n      this.keyValueDeps[key] = {};\n    }\n  }\n\n  // Get a JSON value that can be passed to the constructor to\n  // create a new ReactiveDict with the same contents as this one\n  _getMigrationData() {\n    // XXX sanitize and make sure it's JSONible?\n    return this.keys;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"8516e9039b02dc19bc32b6efe5b16191774de456"}
