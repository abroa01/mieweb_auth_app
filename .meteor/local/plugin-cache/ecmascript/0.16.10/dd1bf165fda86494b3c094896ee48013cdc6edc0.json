{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/node_modules/framer-motion/dist/es/render/VisualElement.mjs","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"node_modules/framer-motion/dist/es/render/VisualElement.mjs","filename":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/node_modules/framer-motion/dist/es/render/VisualElement.mjs","inputSourceMap":{"version":3,"names":["time","featureDefinitions","createBox","isNumericalString","isZeroValueString","initPrefersReducedMotion","hasReducedMotionListener","prefersReducedMotion","SubscriptionManager","warnOnce","motionValue","complex","isMotionValue","getAnimatableNone","findValueType","transformProps","visualElementStore","isControllingVariants","isVariantNode","KeyframeResolver","updateMotionValuesFromProps","resolveVariantFromProps","frame","cancelFrame","propEventHandlers","VisualElement","scrapeMotionValuesFromProps","_props","_prevProps","_visualElement","constructor","parent","props","presenceContext","reducedMotionConfig","blockInitialAnimation","visualState","options","current","children","Set","shouldReduceMotion","values","Map","features","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","notify","latestValues","render","triggerBuild","renderInstance","renderState","style","projection","renderScheduledAt","scheduleRender","now","onUpdate","baseTarget","initialValues","initial","depth","Boolean","variantChildren","manuallyAnimateOnMount","willChange","initialMotionValues","key","value","undefined","set","mount","instance","removeFromVariantTree","addVariantChild","forEach","bindToMotionValue","process","env","NODE_ENV","add","update","unmount","delete","remove","clear","feature","isMounted","has","get","valueIsTransform","removeOnChange","on","latestValue","preRender","isTransformDirty","removeOnRenderRequest","removeSyncCheck","window","MotionCheckAppearSync","owner","stop","sortNodePosition","other","sortInstanceNodePosition","type","updateFeatures","featureDefinition","isEnabled","Feature","FeatureConstructor","build","measureViewportBox","measureInstanceViewportBox","getStaticValue","setStaticValue","transformTemplate","prevProps","prevPresenceContext","i","length","listenerName","listener","handleChildMotionValue","getProps","getVariant","name","variants","getDefaultTransition","transition","getTransformPagePoint","transformPagePoint","getClosestVariantNode","child","closestVariantNode","addValue","existingValue","removeValue","unsubscribe","removeValueFromRenderState","hasValue","getValue","defaultValue","readValue","target","_a","getBaseTargetFromProps","readValueFromInstance","parseFloat","test","setBaseTarget","getBaseTarget","valueFromInitial","variant","custom","eventName","callback","args"],"sources":["node_modules/framer-motion/dist/es/render/VisualElement.mjs"],"sourcesContent":["import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n"],"mappings":"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","ignoreList":[]},"targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth","root":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/node_modules/framer-motion/dist/es/render/VisualElement.mjs","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"node_modules/framer-motion/dist/es/render/VisualElement.mjs","inputSourceMap":{"version":3,"names":["time","featureDefinitions","createBox","isNumericalString","isZeroValueString","initPrefersReducedMotion","hasReducedMotionListener","prefersReducedMotion","SubscriptionManager","warnOnce","motionValue","complex","isMotionValue","getAnimatableNone","findValueType","transformProps","visualElementStore","isControllingVariants","isVariantNode","KeyframeResolver","updateMotionValuesFromProps","resolveVariantFromProps","frame","cancelFrame","propEventHandlers","VisualElement","scrapeMotionValuesFromProps","_props","_prevProps","_visualElement","constructor","parent","props","presenceContext","reducedMotionConfig","blockInitialAnimation","visualState","options","current","children","Set","shouldReduceMotion","values","Map","features","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","notify","latestValues","render","triggerBuild","renderInstance","renderState","style","projection","renderScheduledAt","scheduleRender","now","onUpdate","baseTarget","initialValues","initial","depth","Boolean","variantChildren","manuallyAnimateOnMount","willChange","initialMotionValues","key","value","undefined","set","mount","instance","removeFromVariantTree","addVariantChild","forEach","bindToMotionValue","process","env","NODE_ENV","add","update","unmount","delete","remove","clear","feature","isMounted","has","get","valueIsTransform","removeOnChange","on","latestValue","preRender","isTransformDirty","removeOnRenderRequest","removeSyncCheck","window","MotionCheckAppearSync","owner","stop","sortNodePosition","other","sortInstanceNodePosition","type","updateFeatures","featureDefinition","isEnabled","Feature","FeatureConstructor","build","measureViewportBox","measureInstanceViewportBox","getStaticValue","setStaticValue","transformTemplate","prevProps","prevPresenceContext","i","length","listenerName","listener","handleChildMotionValue","getProps","getVariant","name","variants","getDefaultTransition","transition","getTransformPagePoint","transformPagePoint","getClosestVariantNode","child","closestVariantNode","addValue","existingValue","removeValue","unsubscribe","removeValueFromRenderState","hasValue","getValue","defaultValue","readValue","target","_a","getBaseTargetFromProps","readValueFromInstance","parseFloat","test","setBaseTarget","getBaseTarget","valueFromInitial","variant","custom","eventName","callback","args"],"sources":["node_modules/framer-motion/dist/es/render/VisualElement.mjs"],"sourcesContent":["import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n"],"mappings":"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","ignoreList":[]}}},"code":"!function (module1) {\n  let _objectWithoutProperties;\n  module1.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n    default(v) {\n      _objectWithoutProperties = v;\n    }\n  }, 0);\n  let _objectSpread;\n  module1.link(\"@babel/runtime/helpers/objectSpread2\", {\n    default(v) {\n      _objectSpread = v;\n    }\n  }, 1);\n  const _excluded = [\"willChange\"];\n  module1.export({\n    VisualElement: () => VisualElement\n  });\n  let time;\n  module1.link(\"../frameloop/sync-time.mjs\", {\n    time(v) {\n      time = v;\n    }\n  }, 0);\n  let featureDefinitions;\n  module1.link(\"../motion/features/definitions.mjs\", {\n    featureDefinitions(v) {\n      featureDefinitions = v;\n    }\n  }, 1);\n  let createBox;\n  module1.link(\"../projection/geometry/models.mjs\", {\n    createBox(v) {\n      createBox = v;\n    }\n  }, 2);\n  let isNumericalString;\n  module1.link(\"../utils/is-numerical-string.mjs\", {\n    isNumericalString(v) {\n      isNumericalString = v;\n    }\n  }, 3);\n  let isZeroValueString;\n  module1.link(\"../utils/is-zero-value-string.mjs\", {\n    isZeroValueString(v) {\n      isZeroValueString = v;\n    }\n  }, 4);\n  let initPrefersReducedMotion;\n  module1.link(\"../utils/reduced-motion/index.mjs\", {\n    initPrefersReducedMotion(v) {\n      initPrefersReducedMotion = v;\n    }\n  }, 5);\n  let hasReducedMotionListener, prefersReducedMotion;\n  module1.link(\"../utils/reduced-motion/state.mjs\", {\n    hasReducedMotionListener(v) {\n      hasReducedMotionListener = v;\n    },\n    prefersReducedMotion(v) {\n      prefersReducedMotion = v;\n    }\n  }, 6);\n  let SubscriptionManager;\n  module1.link(\"../utils/subscription-manager.mjs\", {\n    SubscriptionManager(v) {\n      SubscriptionManager = v;\n    }\n  }, 7);\n  let warnOnce;\n  module1.link(\"../utils/warn-once.mjs\", {\n    warnOnce(v) {\n      warnOnce = v;\n    }\n  }, 8);\n  let motionValue;\n  module1.link(\"../value/index.mjs\", {\n    motionValue(v) {\n      motionValue = v;\n    }\n  }, 9);\n  let complex;\n  module1.link(\"../value/types/complex/index.mjs\", {\n    complex(v) {\n      complex = v;\n    }\n  }, 10);\n  let isMotionValue;\n  module1.link(\"../value/utils/is-motion-value.mjs\", {\n    isMotionValue(v) {\n      isMotionValue = v;\n    }\n  }, 11);\n  let getAnimatableNone;\n  module1.link(\"./dom/value-types/animatable-none.mjs\", {\n    getAnimatableNone(v) {\n      getAnimatableNone = v;\n    }\n  }, 12);\n  let findValueType;\n  module1.link(\"./dom/value-types/find.mjs\", {\n    findValueType(v) {\n      findValueType = v;\n    }\n  }, 13);\n  let transformProps;\n  module1.link(\"./html/utils/keys-transform.mjs\", {\n    transformProps(v) {\n      transformProps = v;\n    }\n  }, 14);\n  let visualElementStore;\n  module1.link(\"./store.mjs\", {\n    visualElementStore(v) {\n      visualElementStore = v;\n    }\n  }, 15);\n  let isControllingVariants, isVariantNode;\n  module1.link(\"./utils/is-controlling-variants.mjs\", {\n    isControllingVariants(v) {\n      isControllingVariants = v;\n    },\n    isVariantNode(v) {\n      isVariantNode = v;\n    }\n  }, 16);\n  let KeyframeResolver;\n  module1.link(\"./utils/KeyframesResolver.mjs\", {\n    KeyframeResolver(v) {\n      KeyframeResolver = v;\n    }\n  }, 17);\n  let updateMotionValuesFromProps;\n  module1.link(\"./utils/motion-values.mjs\", {\n    updateMotionValuesFromProps(v) {\n      updateMotionValuesFromProps = v;\n    }\n  }, 18);\n  let resolveVariantFromProps;\n  module1.link(\"./utils/resolve-variants.mjs\", {\n    resolveVariantFromProps(v) {\n      resolveVariantFromProps = v;\n    }\n  }, 19);\n  let frame, cancelFrame;\n  module1.link(\"../frameloop/frame.mjs\", {\n    frame(v) {\n      frame = v;\n    },\n    cancelFrame(v) {\n      cancelFrame = v;\n    }\n  }, 20);\n  ___INIT_METEOR_FAST_REFRESH(module);\n  const propEventHandlers = [\"AnimationStart\", \"AnimationComplete\", \"Update\", \"BeforeLayoutMeasure\", \"LayoutMeasure\", \"LayoutAnimationStart\", \"LayoutAnimationComplete\"];\n  /**\n   * A VisualElement is an imperative abstraction around UI elements such as\n   * HTMLElement, SVGElement, Three.Object3D etc.\n   */\n  class VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n      return {};\n    }\n    constructor(_ref) {\n      let {\n        parent,\n        props,\n        presenceContext,\n        reducedMotionConfig,\n        blockInitialAnimation,\n        visualState\n      } = _ref;\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      /**\n       * A reference to the current underlying Instance, e.g. a HTMLElement\n       * or Three.Mesh etc.\n       */\n      this.current = null;\n      /**\n       * A set containing references to this VisualElement's children.\n       */\n      this.children = new Set();\n      /**\n       * Determine what role this visual element should take in the variant tree.\n       */\n      this.isVariantNode = false;\n      this.isControllingVariants = false;\n      /**\n       * Decides whether this VisualElement should animate in reduced motion\n       * mode.\n       *\n       * TODO: This is currently set on every individual VisualElement but feels\n       * like it could be set globally.\n       */\n      this.shouldReduceMotion = null;\n      /**\n       * A map of all motion values attached to this visual element. Motion\n       * values are source of truth for any given animated value. A motion\n       * value might be provided externally by the component via props.\n       */\n      this.values = new Map();\n      this.KeyframeResolver = KeyframeResolver;\n      /**\n       * Cleanup functions for active features (hover/tap/exit etc)\n       */\n      this.features = {};\n      /**\n       * A map of every subscription that binds the provided or generated\n       * motion values onChange listeners to this visual element.\n       */\n      this.valueSubscriptions = new Map();\n      /**\n       * A reference to the previously-provided motion values as returned\n       * from scrapeMotionValuesFromProps. We use the keys in here to determine\n       * if any motion values need to be removed after props are updated.\n       */\n      this.prevMotionValues = {};\n      /**\n       * An object containing a SubscriptionManager for each active event.\n       */\n      this.events = {};\n      /**\n       * An object containing an unsubscribe function for each prop event subscription.\n       * For example, every \"Update\" event can have multiple subscribers via\n       * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n       */\n      this.propEventSubscriptions = {};\n      this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n      this.render = () => {\n        if (!this.current) return;\n        this.triggerBuild();\n        this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n      };\n      this.renderScheduledAt = 0.0;\n      this.scheduleRender = () => {\n        const now = time.now();\n        if (this.renderScheduledAt < now) {\n          this.renderScheduledAt = now;\n          frame.render(this.render, false, true);\n        }\n      };\n      const {\n        latestValues,\n        renderState,\n        onUpdate\n      } = visualState;\n      this.onUpdate = onUpdate;\n      this.latestValues = latestValues;\n      this.baseTarget = _objectSpread({}, latestValues);\n      this.initialValues = props.initial ? _objectSpread({}, latestValues) : {};\n      this.renderState = renderState;\n      this.parent = parent;\n      this.props = props;\n      this.presenceContext = presenceContext;\n      this.depth = parent ? parent.depth + 1 : 0;\n      this.reducedMotionConfig = reducedMotionConfig;\n      this.options = options;\n      this.blockInitialAnimation = Boolean(blockInitialAnimation);\n      this.isControllingVariants = isControllingVariants(props);\n      this.isVariantNode = isVariantNode(props);\n      if (this.isVariantNode) {\n        this.variantChildren = new Set();\n      }\n      this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n      /**\n       * Any motion values that are provided to the element when created\n       * aren't yet bound to the element, as this would technically be impure.\n       * However, we iterate through the motion values and set them to the\n       * initial values for this component.\n       *\n       * TODO: This is impure and we should look at changing this to run on mount.\n       * Doing so will break some tests but this isn't necessarily a breaking change,\n       * more a reflection of the test.\n       */\n      const _this$scrapeMotionVal = this.scrapeMotionValuesFromProps(props, {}, this),\n        {\n          willChange\n        } = _this$scrapeMotionVal,\n        initialMotionValues = _objectWithoutProperties(_this$scrapeMotionVal, _excluded);\n      for (const key in initialMotionValues) {\n        const value = initialMotionValues[key];\n        if (latestValues[key] !== undefined && isMotionValue(value)) {\n          value.set(latestValues[key], false);\n        }\n      }\n    }\n    mount(instance) {\n      this.current = instance;\n      visualElementStore.set(instance, this);\n      if (this.projection && !this.projection.instance) {\n        this.projection.mount(instance);\n      }\n      if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n        this.removeFromVariantTree = this.parent.addVariantChild(this);\n      }\n      this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n      if (!hasReducedMotionListener.current) {\n        initPrefersReducedMotion();\n      }\n      this.shouldReduceMotion = this.reducedMotionConfig === \"never\" ? false : this.reducedMotionConfig === \"always\" ? true : prefersReducedMotion.current;\n      if (process.env.NODE_ENV !== \"production\") {\n        warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n      }\n      if (this.parent) this.parent.children.add(this);\n      this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n      visualElementStore.delete(this.current);\n      this.projection && this.projection.unmount();\n      cancelFrame(this.notifyUpdate);\n      cancelFrame(this.render);\n      this.valueSubscriptions.forEach(remove => remove());\n      this.valueSubscriptions.clear();\n      this.removeFromVariantTree && this.removeFromVariantTree();\n      this.parent && this.parent.children.delete(this);\n      for (const key in this.events) {\n        this.events[key].clear();\n      }\n      for (const key in this.features) {\n        const feature = this.features[key];\n        if (feature) {\n          feature.unmount();\n          feature.isMounted = false;\n        }\n      }\n      this.current = null;\n    }\n    bindToMotionValue(key, value) {\n      if (this.valueSubscriptions.has(key)) {\n        this.valueSubscriptions.get(key)();\n      }\n      const valueIsTransform = transformProps.has(key);\n      const removeOnChange = value.on(\"change\", latestValue => {\n        this.latestValues[key] = latestValue;\n        this.props.onUpdate && frame.preRender(this.notifyUpdate);\n        if (valueIsTransform && this.projection) {\n          this.projection.isTransformDirty = true;\n        }\n      });\n      const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n      let removeSyncCheck;\n      if (window.MotionCheckAppearSync) {\n        removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n      }\n      this.valueSubscriptions.set(key, () => {\n        removeOnChange();\n        removeOnRenderRequest();\n        if (removeSyncCheck) removeSyncCheck();\n        if (value.owner) value.stop();\n      });\n    }\n    sortNodePosition(other) {\n      /**\n       * If these nodes aren't even of the same type we can't compare their depth.\n       */\n      if (!this.current || !this.sortInstanceNodePosition || this.type !== other.type) {\n        return 0;\n      }\n      return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n      let key = \"animation\";\n      for (key in featureDefinitions) {\n        const featureDefinition = featureDefinitions[key];\n        if (!featureDefinition) continue;\n        const {\n          isEnabled,\n          Feature: FeatureConstructor\n        } = featureDefinition;\n        /**\n         * If this feature is enabled but not active, make a new instance.\n         */\n        if (!this.features[key] && FeatureConstructor && isEnabled(this.props)) {\n          this.features[key] = new FeatureConstructor(this);\n        }\n        /**\n         * If we have a feature, mount or update it.\n         */\n        if (this.features[key]) {\n          const feature = this.features[key];\n          if (feature.isMounted) {\n            feature.update();\n          } else {\n            feature.mount();\n            feature.isMounted = true;\n          }\n        }\n      }\n    }\n    triggerBuild() {\n      this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n      return this.current ? this.measureInstanceViewportBox(this.current, this.props) : createBox();\n    }\n    getStaticValue(key) {\n      return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n      this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n      if (props.transformTemplate || this.props.transformTemplate) {\n        this.scheduleRender();\n      }\n      this.prevProps = this.props;\n      this.props = props;\n      this.prevPresenceContext = this.presenceContext;\n      this.presenceContext = presenceContext;\n      /**\n       * Update prop event handlers ie onAnimationStart, onAnimationComplete\n       */\n      for (let i = 0; i < propEventHandlers.length; i++) {\n        const key = propEventHandlers[i];\n        if (this.propEventSubscriptions[key]) {\n          this.propEventSubscriptions[key]();\n          delete this.propEventSubscriptions[key];\n        }\n        const listenerName = \"on\" + key;\n        const listener = props[listenerName];\n        if (listener) {\n          this.propEventSubscriptions[key] = this.on(key, listener);\n        }\n      }\n      this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n      if (this.handleChildMotionValue) {\n        this.handleChildMotionValue();\n      }\n      this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n      return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n      return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n      return this.props.transition;\n    }\n    getTransformPagePoint() {\n      return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n      return this.isVariantNode ? this : this.parent ? this.parent.getClosestVariantNode() : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n      const closestVariantNode = this.getClosestVariantNode();\n      if (closestVariantNode) {\n        closestVariantNode.variantChildren && closestVariantNode.variantChildren.add(child);\n        return () => closestVariantNode.variantChildren.delete(child);\n      }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n      // Remove existing value if it exists\n      const existingValue = this.values.get(key);\n      if (value !== existingValue) {\n        if (existingValue) this.removeValue(key);\n        this.bindToMotionValue(key, value);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n      }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n      this.values.delete(key);\n      const unsubscribe = this.valueSubscriptions.get(key);\n      if (unsubscribe) {\n        unsubscribe();\n        this.valueSubscriptions.delete(key);\n      }\n      delete this.latestValues[key];\n      this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n      return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n      if (this.props.values && this.props.values[key]) {\n        return this.props.values[key];\n      }\n      let value = this.values.get(key);\n      if (value === undefined && defaultValue !== undefined) {\n        value = motionValue(defaultValue === null ? undefined : defaultValue, {\n          owner: this\n        });\n        this.addValue(key, value);\n      }\n      return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n      var _a;\n      let value = this.latestValues[key] !== undefined || !this.current ? this.latestValues[key] : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n      if (value !== undefined && value !== null) {\n        if (typeof value === \"string\" && (isNumericalString(value) || isZeroValueString(value))) {\n          // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n          value = parseFloat(value);\n        } else if (!findValueType(value) && complex.test(target)) {\n          value = getAnimatableNone(key, target);\n        }\n        this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n      }\n      return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n      this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n      var _a;\n      const {\n        initial\n      } = this.props;\n      let valueFromInitial;\n      if (typeof initial === \"string\" || typeof initial === \"object\") {\n        const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n        if (variant) {\n          valueFromInitial = variant[key];\n        }\n      }\n      /**\n       * If this value still exists in the current initial variant, read that.\n       */\n      if (initial && valueFromInitial !== undefined) {\n        return valueFromInitial;\n      }\n      /**\n       * Alternatively, if this VisualElement config has defined a getBaseTarget\n       * so we can read the value from an alternative source, try that.\n       */\n      const target = this.getBaseTargetFromProps(this.props, key);\n      if (target !== undefined && !isMotionValue(target)) return target;\n      /**\n       * If the value was initially defined on initial, but it doesn't any more,\n       * return undefined. Otherwise return the value as initially read from the DOM.\n       */\n      return this.initialValues[key] !== undefined && valueFromInitial === undefined ? undefined : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n      if (!this.events[eventName]) {\n        this.events[eventName] = new SubscriptionManager();\n      }\n      return this.events[eventName].add(callback);\n    }\n    notify(eventName) {\n      if (this.events[eventName]) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        this.events[eventName].notify(...args);\n      }\n    }\n  }\n}.call(this, module);","map":{"version":3,"names":["propEventHandlers","VisualElement","scrapeMotionValuesFromProps","_props","_prevProps","_visualElement","constructor","_ref","parent","props","presenceContext","reducedMotionConfig","blockInitialAnimation","visualState","options","arguments","length","undefined","current","children","Set","isVariantNode","isControllingVariants","shouldReduceMotion","values","Map","KeyframeResolver","features","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","notify","latestValues","render","triggerBuild","renderInstance","renderState","style","projection","renderScheduledAt","scheduleRender","now","time","frame","onUpdate","baseTarget","_objectSpread","initialValues","initial","depth","Boolean","variantChildren","manuallyAnimateOnMount","_this$scrapeMotionVal","willChange","initialMotionValues","_objectWithoutProperties","_excluded","key","value","isMotionValue","set","mount","instance","visualElementStore","removeFromVariantTree","addVariantChild","forEach","bindToMotionValue","hasReducedMotionListener","initPrefersReducedMotion","prefersReducedMotion","process","env","NODE_ENV","warnOnce","add","update","unmount","delete","cancelFrame","remove","clear","feature","isMounted","has","get","valueIsTransform","transformProps","removeOnChange","on","latestValue","preRender","isTransformDirty","removeOnRenderRequest","removeSyncCheck","window","MotionCheckAppearSync","owner","stop","sortNodePosition","other","sortInstanceNodePosition","type","updateFeatures","featureDefinitions","featureDefinition","isEnabled","Feature","FeatureConstructor","build","measureViewportBox","measureInstanceViewportBox","createBox","getStaticValue","setStaticValue","transformTemplate","prevProps","prevPresenceContext","i","listenerName","listener","updateMotionValuesFromProps","handleChildMotionValue","getProps","getVariant","name","variants","getDefaultTransition","transition","getTransformPagePoint","transformPagePoint","getClosestVariantNode","child","closestVariantNode","addValue","existingValue","removeValue","unsubscribe","removeValueFromRenderState","hasValue","getValue","defaultValue","motionValue","readValue","target","_a","getBaseTargetFromProps","readValueFromInstance","isNumericalString","isZeroValueString","parseFloat","findValueType","complex","test","getAnimatableNone","setBaseTarget","getBaseTarget","valueFromInitial","variant","resolveVariantFromProps","custom","eventName","callback","SubscriptionManager","_len","args","Array","_key","call","module"],"sources":["node_modules/framer-motion/dist/es/render/VisualElement.mjs"],"sourcesContent":["import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"dd1bf165fda86494b3c094896ee48013cdc6edc0"}
