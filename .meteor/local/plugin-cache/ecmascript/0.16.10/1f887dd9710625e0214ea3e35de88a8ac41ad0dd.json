{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","filename":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","inputSourceMap":{"version":3,"names":["MotionGlobalConfig","frameData","now","clearTime","undefined","time","set","isProcessing","useManualTiming","timestamp","performance","newTime","queueMicrotask"],"sources":["node_modules/framer-motion/dist/es/frameloop/sync-time.mjs"],"sourcesContent":["import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n"],"mappings":";AAAA,SAASA,kBAAkB,QAAQ,2BAA2B;AAC9D,SAASC,SAAS,QAAQ,aAAa;AAEvC,IAAIC,GAAG;AACP,SAASC,SAASA,CAAA,EAAG;EACjBD,GAAG,GAAGE,SAAS;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,IAAI,GAAG;EACTH,GAAG,EAAEA,CAAA,KAAM;IACP,IAAIA,GAAG,KAAKE,SAAS,EAAE;MACnBC,IAAI,CAACC,GAAG,CAACL,SAAS,CAACM,YAAY,IAAIP,kBAAkB,CAACQ,eAAe,GAC/DP,SAAS,CAACQ,SAAS,GACnBC,WAAW,CAACR,GAAG,CAAC,CAAC,CAAC;IAC5B;IACA,OAAOA,GAAG;EACd,CAAC;EACDI,GAAG,EAAGK,OAAO,IAAK;IACdT,GAAG,GAAGS,OAAO;IACbC,cAAc,CAACT,SAAS,CAAC;EAC7B;AACJ,CAAC;AAED,SAASE,IAAI","ignoreList":[]},"targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth","root":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/anshul/Masters/Internship/POC/Meteor_Mobile/mieweb_push_auth/node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","inputSourceMap":{"version":3,"names":["MotionGlobalConfig","frameData","now","clearTime","undefined","time","set","isProcessing","useManualTiming","timestamp","performance","newTime","queueMicrotask"],"sources":["node_modules/framer-motion/dist/es/frameloop/sync-time.mjs"],"sourcesContent":["import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n"],"mappings":";AAAA,SAASA,kBAAkB,QAAQ,2BAA2B;AAC9D,SAASC,SAAS,QAAQ,aAAa;AAEvC,IAAIC,GAAG;AACP,SAASC,SAASA,CAAA,EAAG;EACjBD,GAAG,GAAGE,SAAS;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,IAAI,GAAG;EACTH,GAAG,EAAEA,CAAA,KAAM;IACP,IAAIA,GAAG,KAAKE,SAAS,EAAE;MACnBC,IAAI,CAACC,GAAG,CAACL,SAAS,CAACM,YAAY,IAAIP,kBAAkB,CAACQ,eAAe,GAC/DP,SAAS,CAACQ,SAAS,GACnBC,WAAW,CAACR,GAAG,CAAC,CAAC,CAAC;IAC5B;IACA,OAAOA,GAAG;EACd,CAAC;EACDI,GAAG,EAAGK,OAAO,IAAK;IACdT,GAAG,GAAGS,OAAO;IACbC,cAAc,CAACT,SAAS,CAAC;EAC7B;AACJ,CAAC;AAED,SAASE,IAAI","ignoreList":[]}}},"code":"!function (module1) {\n  module1.export({\n    time: () => time\n  });\n  let MotionGlobalConfig;\n  module1.link(\"../utils/GlobalConfig.mjs\", {\n    MotionGlobalConfig(v) {\n      MotionGlobalConfig = v;\n    }\n  }, 0);\n  let frameData;\n  module1.link(\"./frame.mjs\", {\n    frameData(v) {\n      frameData = v;\n    }\n  }, 1);\n  ___INIT_METEOR_FAST_REFRESH(module);\n  let now;\n  function clearTime() {\n    now = undefined;\n  }\n  /**\n   * An eventloop-synchronous alternative to performance.now().\n   *\n   * Ensures that time measurements remain consistent within a synchronous context.\n   * Usually calling performance.now() twice within the same synchronous context\n   * will return different values which isn't useful for animations when we're usually\n   * trying to sync animations to the same frame.\n   */\n  const time = {\n    now: () => {\n      if (now === undefined) {\n        time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming ? frameData.timestamp : performance.now());\n      }\n      return now;\n    },\n    set: newTime => {\n      now = newTime;\n      queueMicrotask(clearTime);\n    }\n  };\n}.call(this, module);","map":{"version":3,"names":["now","clearTime","undefined","time","set","frameData","isProcessing","MotionGlobalConfig","useManualTiming","timestamp","performance","newTime","queueMicrotask","call","module"],"sources":["node_modules/framer-motion/dist/es/frameloop/sync-time.mjs"],"sourcesContent":["import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n"],"mappings":";;;;;;;;;;;;;;;;;EAGA,IAAIA,GAAG;EACP,SAASC,SAASA,CAAA,EAAG;IACjBD,GAAG,GAAGE,SAAS;EACnB;EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,MAAMC,IAAI,GAAG;IACTH,GAAG,EAAEA,CAAA,KAAM;MACP,IAAIA,GAAG,KAAKE,SAAS,EAAE;QACnBC,IAAI,CAACC,GAAG,CAACC,SAAS,CAACC,YAAY,IAAIC,kBAAkB,CAACC,eAAe,GAC/DH,SAAS,CAACI,SAAS,GACnBC,WAAW,CAACV,GAAG,CAAC,CAAC,CAAC;MAC5B;MACA,OAAOA,GAAG;IACd,CAAC;IACDI,GAAG,EAAGO,OAAO,IAAK;MACdX,GAAG,GAAGW,OAAO;MACbC,cAAc,CAACX,SAAS,CAAC;IAC7B;EACJ,CAAC;AAAA,EAAAY,IAAA,OAAAC,MAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"1f887dd9710625e0214ea3e35de88a8ac41ad0dd"}
